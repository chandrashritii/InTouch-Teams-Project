{"version":3,"sources":["configs/helpers.js","configs/firebase.js","context/profile.context.js","routes/PublicRoute.js","routes/PrivateRoute.js","context/rooms.context.js","components/Profile/UserAvatar.js","configs/functional.js","components/GroupChats/UserStatus.js","components/Chat/ChatArea/ProfileinModal.js","context/userroom.context.js","components/Chat/ChatArea/ChatMessages.js","components/Chat/ChatArea/index.js","components/Chat/Nav/videocallindex.js","components/Chat/Footer/SendFile.js","components/Chat/Footer/SendAudioButton.js","components/Chat/Footer/emojis/emojis.styles.jsx","components/Chat/Footer/emojis/emojis.component.jsx","components/Chat/Nav/RoomOutput.js","components/Chat/Footer/index.js","UserLanding/Home/VideoCallChat.js","videocall/src/components/VideoNav.js","videocall/src/socketConnections/helpers.js","videocall/src/socketConnections/rtcConnections.js","videocall/src/components/VideoNavButtons.js","videocall/src/components/MeetingRoom/Recording.js","videocall/src/components/MeetingRoom/index.js","videocall/src/socketConnections/actions.js","components/common/ErrorBoundary.js","UserLanding/Signin.js","videocall/src/services/CreateRoom.js","videocall/src/components/Home/index.js","UserLanding/Navbar/RoomCreationButton.js","components/common/EditComponent.js","components/Profile/ProfileLinking.js","components/Profile/ReactAvatar.js","components/Profile/index.js","components/Profile/OpenDrawer.js","components/GroupChats/RoomIndexData.js","components/GroupChats/RoomIndex.js","UserLanding/Navbar/Navbar.js","components/Chat/Nav/EditRoom.js","components/Chat/Nav/AnimatedButton.js","components/Chat/Nav/VideoCallButton.js","components/Chat/Nav/index.js","UserLanding/Home/Chat.js","UserLanding/Home/index.js","App.js","index.js","assets/teams.svg"],"names":["isLocalhost","Boolean","window","location","hostname","match","Array","snapVal","Object","keys","ArrayId","map","roomId","id","Updates","userId","keyToUpdate","value","db","a","updates","getMsgs","ref","orderByChild","equalTo","once","getRooms","Promise","all","msgSnap","rSnap","forEach","key","roomSnap","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","functions","messaging","onMessage","notification","title","body","Toast","info","description","duration","useFunctionsEmulator","ProfileContext","createContext","Offline","state","last_changed","ServerValue","TIMESTAMP","Online","UserProfile","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusDatabaseRef","tokenRefreshUnsub","authUnsub","onAuthStateChanged","authObj","uid","console","log","on","snap","val","data","name","createdAt","avatar","email","snapshot","onDisconnect","set","then","onTokenRefresh","getToken","off","Provider","useProfile","useContext","PublicRoute","routeProps","Container","Loader","center","vertical","size","content","speed","to","PrivateRoute","RoomsContext","UserRooms","rooms","setRooms","roomListRef","useRooms","USerAvatar","avatarProps","Avatar","circle","splitName","toUpperCase","split","length","Nameget","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","getColor","presence","getText","Date","toLocaleDateString","UserStatus","setPresence","userStatusRef","exists","usePresence","Whisper","placement","trigger","speaker","Tooltip","Badge","className","style","backgroundColor","ProfileinModal","btnProps","shortName","memberSince","Button","onClick","Modal","show","onHide","Header","Title","Body","src","Footer","block","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","ConditonalBadge","condition","ImageOpeninModal","fileName","Input","type","alt","width","height","href","target","rel","IconFix","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","IconButton","icon","Icon","memo","message","handleAdmin","handleLike","handleDelete","author","text","file","likes","likeCount","hearts","heartCount","setValue","useRef","handleMouseOver","handleMouseOut","node","current","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMobile","isAdmin","v","isMsgAuthorAdmin","admins","includes","isAuthor","currentUser","canGrantAdmin","isLiked","canShowIcons","appearance","color","datetime","contentType","url","controls","renderFileMessage","messagesRef","GroupMessages","chatId","useParams","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","percentage","scrollTop","scrollHeight","clientHeight","ScrollBottom","prev","onLoadMore","oldHeight","setTimeout","newHeight","msgId","confirm","isLast","update","Alert","error","fileRef","refFromURL","delete","adminsRef","transaction","alertMsg","messageRef","msg","marginLeft","marginTop","fontSize","groupingKeyFunc","groups","item","toDateString","reduce","result","groupingKey","push","items","date","msgs","renderMessages","componentClass","Link","textAlign","marginRight","SendFile","afterUpload","fileList","setFileList","onUpload","uploadPromises","child","now","put","blobFile","cacheControl","uploadSnapshots","shapePromises","metadata","getDownloadURL","files","InputGroup","Uploader","autoUpload","action","onChange","fileArr","filtered","filter","el","slice","multiple","listType","disabled","SendAudioButton","isRecording","setIsRecording","isUploading","setIsUploading","p","blob","record","onStop","mimeType","EmojisContainer","styled","div","EmojiPickerContainer","EmojiPicker","Emojis","pickEmoji","onEmojiClick","borderRadius","padding","paddingLeft","paddingRight","assembleMessage","input","setInput","onInputChange","onSendClick","trim","msgData","messageId","lastMsgId","pop","inputRef","createRef","showEmojis","setShowEmojis","cursorPosition","setCursorPosition","selectionEnd","border","e","emoji","start","substring","selectionStart","placeholder","onKeyDown","ev","keyCode","preventDefault","VideoCallChat","useHistory","currentRoom","find","room","variant","currentRoomData","expand","sticky","Brand","moment","format","generateRandomString","Math","random","toString","closeVideo","elemId","document","getElementById","remove","this","adjustVideoElemSize","pageHasFocus","hidden","onfocusout","onpagehide","onblur","getQString","keyToReturn","queryStrings","decodeURIComponent","splittedQStrings","queryStringObj","keyValuePair","keyValue","userMediaAvailable","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","getUserFullMedia","mediaDevices","video","audio","echoCancellation","noiseSuppression","Error","getUserAudio","shareScreen","getDisplayMedia","cursor","sampleRate","getIceServer","iceServers","urls","username","credential","addChat","senderType","chatMsgDiv","querySelector","contentAlign","senderName","msgBg","sender","toggleChatNotificationBadge","infoDiv","createElement","innerHTML","colDiv","rowDiv","appendChild","scrollIntoView","classList","contains","setAttribute","removeAttribute","replaceTrack","stream","recipientPeer","getSenders","s","track","kind","toggleShareIcons","share","shareIconElem","add","toggleVideoBtnDisabled","maximiseStream","elem","parentElement","previousElementSibling","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","singleStreamToggleMute","muted","saveRecordedStream","user","Blob","File","unix","saveAs","toggleModal","display","setLocalStream","mirrorMode","localVidElem","srcObject","getElementsByClassName","totalRemoteVideosDesktop","newWidth","i","maxWidth","createDemoRemotes","str","total","testInterval","setInterval","newVid","autoplay","controlDiv","cardDiv","clearInterval","pc","socket","io","myStream","socketIdentity","screen","recordedStream","mediaRecorder","loadRtc","meetingId","commElem","sessionStorage","getItem","attributes","removeNamedItem","init","createOffer","partnerName","RTCPeerConnection","h","getTracks","addTrack","catch","onnegotiationneeded","offer","setLocalDescription","emit","localDescription","onicecandidate","candidate","ontrack","streams","onconnectionstatechange","d","iceConnectionState","onsignalingstatechange","signalingState","stopSharingScreen","res","rej","stop","broadcastNewTracks","getAudioTracks","getVideoTracks","pName","engine","addIceCandidate","RTCIceCandidate","setRemoteDescription","RTCSessionDescription","createAnswer","answer","which","sendMsg","enabled","readyState","recordScreen","recordVideo","resume","startRecording","MediaRecorder","ondataavailable","onstop","onerror","screenStream","videoStream","VideoNavButtons","zIndex","RecordingView","MeetingRoom","React","roomLink","chatElem","helpers","pictureInPictureElement","exitPictureInPicture","requestPictureInPicture","isStarted","stopRecording","copyToClipboard","element","$temp","$","append","select","execCommand","Recording","volume","autoPlay","Grid","fluid","Row","exact","path","Col","xs","md","rows","ErrorBoundary","errorInfo","setState","whiteSpace","componentStack","Component","SignIn","signInWithProvider","provider","signInWithPopup","additionalUserInfo","isNewUser","displayName","success","onGoogleSignIn","GoogleAuthProvider","MyComponent","vantaEffect","setVantaEffect","myRef","GLOBE","color2","destroy","mdOffset","Panel","teams","Homevideo","setRoomLink","makeRoom","roomName","setItem","origin","replace","createRoom","Background","NET","StringType","Schema","Types","model","Model","isRequired","INITIAL_FORM","CreateRoom","formValue","setFormValue","formRef","onFormChange","onSubmit","check","newRoomData","Form","FormGroup","ControlLabel","FormControl","EditNow","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","isEditable","setIsEditable","onEditClick","onSaveClick","trimmed","ProfileLink","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","link","linkWithPopup","Tag","closable","onClose","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","ReactAvatar","img","setImg","avatarEditorRef","onUploadClick","getImageScaledToCanvas","avatarFileRef","uploadAvatarResult","downloadUrl","htmlFor","accept","currFiles","isValidFile","warning","image","rotate","Profile","onSignOut","newData","Drawer","Divider","OpenDrawer","signOut","err","paddingTop","paddingBottom","full","RoomIndexData","lastMessage","RoomIndex","aboveElementHeight","useLocation","reversed","background","activeKey","pathname","Item","eventKey","margin","Navbar","topNavbarRef","setHeight","class","roomsRef","updateData","newName","row","newDescription","AnimatedButton","marginBottom","x","y","viewBox","enable-background","fill","opacity","cx","cy","r","preserveaspectratio","stroke","stroke-width","stroke-miterlimit","alignItems","ButtonToolbar","Chat","Home","isDesktop","isExact","useRouteMatch","canRenderNavbar","App","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.6452b862.chunk.js","sourcesContent":["\n//Template Localhost Boolean Expression to ensure safe local deployment\nexport const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n\nexport const Array = snapVal => {\n  return snapVal ? Object.keys(snapVal) : [];\n};\n\nexport function ArrayId(snapVal) {\n  return snapVal\n    ? Object.keys(snapVal).map(roomId => {\n        return { ...snapVal[roomId], id: roomId };\n      })\n    : [];\n}\n\n// User Updates whenever profile is changed\nexport const Updates = async (userId, keyToUpdate, value, db) => {\n  const updates = {};\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\n  const getMsgs = db\n    .ref('/messages')\n    .orderByChild('author/uid')\n    .equalTo(userId)\n    .once('value');\n  const getRooms = db\n    .ref('/rooms')\n    .orderByChild('lastMessage/author/uid')\n    .equalTo(userId)\n    .once('value');\n  const [msgSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\n\n  msgSnap.forEach(msgSnap => {\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\n  });\n\n  rSnap.forEach(roomSnap => {\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\n  });\n  return updates;\n};\n\nexport function groupBy(array, groupingKeyFunc) {\n  return array.reduce((result, item) => {\n    const groupingKey = groupingKeyFunc(item);\n\n    if (!result[groupingKey]) {\n      result[groupingKey] = [];\n    }\n    result[groupingKey].push(item);\n\n    return result;\n  }, {});\n}\n\nexport function Nameget(name) {\n  const splitName = name.toUpperCase().split(' '); // array of words\n  if (splitName.length > 1) {\n    // get the initials of two words, first word first letter and second word first letter\n    return splitName[0][0] + splitName[1][0];\n  }\n  return splitName[0][0];\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport 'firebase/messaging';\nimport 'firebase/functions';\nimport { isLocalhost } from './helpers';\nimport { Notification as Toast } from 'rsuite';\n\nconst config = {\n  apiKey: \"AIzaSyAsVD_C7K44THRKg1N3z90kWqhIImPuZnA\",\n    authDomain: \"lastchance-64156.firebaseapp.com\",\n    databaseURL: \"https://lastchance-64156-default-rtdb.firebaseio.com\",\n    projectId: \"lastchance-64156\",\n    storageBucket: \"lastchance-64156.appspot.com\",\n    messagingSenderId: \"986678897419\",\n    appId: \"1:986678897419:web:7fad3f6acf86fa0697100e\"\n\n};\n\n// instance of firebase app\nconst app = firebase.initializeApp(config);\n\n// auth for Facebook and Google\nexport const auth = app.auth();\n\nexport const database = app.database();\n\nexport const storage = app.storage();\n\nexport const functions = app.functions('nam5(us-central)');\n\n export const messaging = firebase.messaging()\n ? app.messaging()\n : null;\n\n // if (messaging) {\n//   messaging.getToken({\n//     vapidKey:\n//       'BJ_lFbdq1RmUrKGgv4RD57-9_UstBgLx1EKm3rd2G43WK2qlPfT91e_5WhXJYcEOyfOg_EyfTVnzK_NeMAOT_r8',\n//   });\n\n  // foreground\n  messaging.onMessage(({ notification }) => {\n    // console.log(data);\n    const { title, body } = notification;\n    Toast.info({ title, description: body, duration: 0 });\n  });\n\nif (isLocalhost) {\n  functions.useFunctionsEmulator('http://localhost:5001');\n}","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { auth, database, messaging } from '../configs/firebase';\nimport firebase from 'firebase/app';\n\n\nconst ProfileContext = createContext();\n\nexport const Offline = {\n  state: 'offline',\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\n};\n\nconst Online = {\n  state: 'online',\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\n};\n\n\nexport const UserProfile = ({ children }) => {\n  const [profile, setProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let userRef;\n    let userStatusDatabaseRef;\n    let tokenRefreshUnsub;\n\n    const authUnsub = auth.onAuthStateChanged(async authObj => {\n      if (authObj) {\n        userStatusDatabaseRef = database.ref(`/status/${authObj.uid}`);\n        console.log(authObj.uid);\n        userRef = database.ref(`/profiles/${authObj.uid}`);\n        console.log(authObj);\n\n        userRef.on('value', snap => {\n          console.log('snap', snap);\n          const { name, createdAt, avatar } = snap.val();\n\n          const data = {\n            name,\n            createdAt,\n            avatar,\n            uid: authObj.uid,\n            email: authObj.email,\n          };\n\n          setProfile(data);\n          setIsLoading(false);\n        });\n\n        database.ref('.info/connected').on('value', function (snapshot) {\n          if (!!snapshot.val() === false) {\n            return;\n          }\n\n          userStatusDatabaseRef\n            .onDisconnect()\n            .set(Offline)\n            .then(function () {\n              userStatusDatabaseRef.set(Online);\n            });\n        });\n\n        if (messaging) {\n   \n          tokenRefreshUnsub = messaging.onTokenRefresh(async () => {\n            try {\n              const currentToken = await messaging.getToken();\n              if (currentToken) {\n                await database\n                  .set(authObj.uid);\n              }\n            } catch (err) {\n            }\n          });\n        }\n      } else {\n        if (userRef) {\n          // unsubscribe\n          userRef.off();\n        }\n        if (userStatusDatabaseRef) {\n          userStatusDatabaseRef.off();\n        }\n        if (tokenRefreshUnsub) {\n          tokenRefreshUnsub();\n        }\n\n        database.ref('.info/connected').off();\n        setProfile(null);\n        setIsLoading(false);\n      }\n    });\n\n    // cleanup subscription onAuthStateChanged\n    return () => {\n      authUnsub();\n\n      if (userRef) {\n        userRef.off();\n      }\n      if (userStatusDatabaseRef) {\n        userStatusDatabaseRef.off();\n      }\n      if (tokenRefreshUnsub) {\n        tokenRefreshUnsub();\n      }\n\n      database.ref('.info/connected').off();\n    };\n  }, []);\n\n  return (\n    <ProfileContext.Provider value={{ isLoading, profile }}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n\n// call with useProfile function\nexport const useProfile = () => useContext(ProfileContext);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { Container, Loader } from 'rsuite';\nimport { useProfile } from '../context/profile.context';\n\nconst PublicRoute = ({ children, ...routeProps }) => {\n  // const profile = false;\n  const { profile, isLoading } = useProfile();\n\n  if (isLoading && !profile) {\n    return (\n      <Container>\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\n      </Container>\n    );\n  }\n\n  if (profile && !isLoading) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return <Route {...routeProps}>{children}</Route>;\n};\n\nexport default PublicRoute;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { Container, Loader } from 'rsuite';\nimport { useProfile } from '../context/profile.context';\n\nconst PrivateRoute = ({ children, ...routeProps }) => {\n  // const profile = false;\n  const { profile, isLoading } = useProfile();\n\n  if (isLoading && !profile) {\n    return (\n      <Container>\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\n      </Container>\n    );\n  }\n\n  if (!profile && !isLoading) {\n    return <Redirect to=\"/signin\" />;\n  }\n  return <Route {...routeProps}>{children}</Route>;\n};\n\nexport default PrivateRoute;\n","import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { database } from '../configs/firebase';\nimport { ArrayId } from '../configs/helpers';\n\nconst RoomsContext = createContext();\n\nexport const UserRooms = ({ children }) => {\n  const [rooms, setRooms] = useState(null);\n\n  useEffect(() => {\n    const roomListRef = database.ref('rooms');\n    roomListRef.on('value', snap => {\n      const data = ArrayId(snap.val());\n      setRooms(data);\n    });\n\n    return () => {\n      roomListRef.off();\n    };\n  }, []);\n\n  return (\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\n  );\n};\n\n// helper hook\nexport const useRooms = () => useContext(RoomsContext);\n","import React from 'react'\nimport { Avatar } from 'rsuite'\nimport {Nameget} from '../../configs/helpers'\n\nconst USerAvatar = ({name, ...avatarProps}) => {\n    return (\n        <Avatar circle {...avatarProps}>\n            {Nameget(name)}\n        </Avatar>\n    )\n}\n\nexport default USerAvatar\n","import { useState, useCallback, useEffect, useRef } from 'react';\nimport { database } from './firebase';\n\nexport function useModalState(defaultValue = false) {\n  const [isOpen, setIsOpen] = useState(defaultValue);\n\n  const open = useCallback(() => setIsOpen(true), []);\n  const close = useCallback(() => setIsOpen(false), []);\n\n  return { isOpen, open, close };\n}\n\nexport const useMediaQuery = query => {\n  const [matches, setMatches] = useState(\n    () => window.matchMedia(query).matches\n  );\n\n  useEffect(() => {\n    const queryList = window.matchMedia(query);\n    setMatches(queryList.matches);\n\n    const listener = evt => setMatches(evt.matches);\n\n    queryList.addListener(listener);\n    return () => queryList.removeListener(listener);\n  }, [query]);\n\n  return matches;\n};\n\nexport function usePresence(uid) {\n  const [presence, setPresence] = useState(null);\n  useEffect(() => {\n    // pull user data\n    const userStatusRef = database.ref(`/status/${uid}`);\n    userStatusRef.on('value', snapshot => {\n      if (snapshot.exists()) {\n        const data = snapshot.val();\n        setPresence(data);\n      }\n    });\n    return () => {\n      userStatusRef.off();\n    };\n  }, [uid]);\n  return presence;\n}\n\nexport function useHover() {\n  const [value, setValue] = useState(false);\n\n  const ref = useRef(null);\n\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver);\n        node.addEventListener('mouseout', handleMouseOut);\n      }\n      return () => {\n        node.removeEventListener('mouseover', handleMouseOver);\n        node.removeEventListener('mouseout', handleMouseOut);\n      };\n    },\n    [ref.current] \n  );\n\n  return [ref, value];\n}\n","import React from 'react';\nimport { Badge, Tooltip, Whisper } from 'rsuite';\nimport { usePresence } from '../../configs/functional';\n\nconst getColor = presence => {\n  if (!presence) {\n    return 'gray';\n  }\n  switch (presence.state) {\n    case 'online':\n      return '#66FF00';\n    case 'offline':\n      return '#FF033E';\n    default:\n      return 'gray';\n  }\n};\n\nconst getText = presence => {\n  if (!presence) {\n    return 'Unknown state';\n  }\n  return presence.state === 'online'\n    ? 'Online'\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()} `;\n};\n\nconst UserStatus = ({ uid }) => {\n  const presence = usePresence(uid);\n  return (\n    <Whisper\n      placement=\"top\"\n      trigger=\"hover\"\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\n    >\n      <Badge\n        className=\"cursor-pointer\"\n        style={{ backgroundColor: getColor(presence) }}\n      />\n    </Whisper>\n  );\n};\n\nexport default UserStatus;\n","import React from 'react';\nimport { Button, Modal } from 'rsuite';\nimport { useModalState } from '../../../configs/functional';\nimport USerAvatar from '../../Profile/UserAvatar';\n\nconst ProfileinModal = ({ profile, children, ...btnProps }) => {\n  const { isOpen, close, open } = useModalState();\n  const shortName = profile.name.split(' ')[0];\n  const { name, avatar, createdAt } = profile;\n  const memberSince = new Date(createdAt).toLocaleDateString();\n\n  return (\n    <>\n      <Button onClick={open} {...btnProps}>\n        {shortName}\n      </Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>{shortName} profile</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body className=\"text-center\">\n          <USerAvatar\n            src={avatar}\n            name={name}\n            className=\"widthtwo heighttwo bigsize font-huge\"\n          />\n          <h4 className=\"mt-2\">{name}</h4>\n          <p>Member since {memberSince}</p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          {children}\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileinModal;\n","import React from 'react';\nimport { createContext, useContextSelector } from 'use-context-selector';\n\nconst CurrentRoomContext = createContext();\n\nexport const CurrentRoomProvider = ({ children, data }) => {\n  return (\n    <CurrentRoomContext.Provider value={data}>\n      {children}\n    </CurrentRoomContext.Provider>\n  );\n};\n\nexport const useCurrentRoom = selector =>\n  useContextSelector(CurrentRoomContext, selector);\n","import React, { memo } from 'react';\nimport { Button } from 'rsuite';\nimport TimeAgo from 'timeago-react';\nimport USerAvatar from '../../Profile/UserAvatar';\nimport UserStatus from '../../GroupChats/UserStatus';\nimport ProfileinModal from './ProfileinModal';\nimport { useCurrentRoom } from '../../../context/userroom.context';\nimport { auth } from '../../../configs/firebase';\nimport { useHover, useMediaQuery } from '../../../configs/functional';\nimport { Badge, Icon, IconButton, Tooltip, Whisper } from 'rsuite';\nimport { Input, Modal } from 'rsuite';\nimport { useModalState } from '../../../configs/functional';\n\nconst ConditonalBadge = ({ condition, children }) => {\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\n};\n\nconst ImageOpeninModal = ({ src, fileName }) => {\n  const { isOpen, open, close } = useModalState();\n  return (\n    <>\n      <Input\n        type=\"image\"\n        alt=\"file\"\n        src={src}\n        onClick={open}\n        className=\"mwhundred mhhundred\"\n        style={{width: 'auto'}}\n      />\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>{fileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\n            Download from Source\n          </a>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nconst IconFix = ({\n  isVisible,\n  iconName,\n  tooltip,\n  onClick,\n  badgeContent,\n  ...props\n}) => {\n  return (\n    <div\n      className=\"ml-2\"\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\n    >\n      <ConditonalBadge condition={badgeContent}>\n        <Whisper\n          placement=\"top\"\n          delay={0}\n          delayHide={0}\n          delayShow={0}\n          trigger=\"hover\"\n          speaker={<Tooltip>{tooltip}</Tooltip>}\n        >\n          <IconButton\n            {...props}\n            onClick={onClick}\n            circle\n            size=\"xs\"\n            icon={<Icon icon={iconName} />}\n          />\n        </Whisper>\n      </ConditonalBadge>\n    </div>\n  );\n};\n\n\nconst renderFileMessage = file => {\n  if (file.contentType.includes('image')) {\n    return (\n      <div className=\"heighttwenty\">\n        <ImageOpeninModal src={file.url} fileName={file.name} />\n      </div>\n    );\n  }\n\n  if (file.contentType.includes('audio')) {\n    return (\n      <audio controls>\n        <source src={file.url} type=\"audio/mp3\" />\n        Your browser does not support audio\n      </audio>\n    );\n  }\n  return <a href={file.url}>Download {file.name}</a>;\n};\n\nconst ChatMessages = ({ message, handleAdmin, handleLike, handleDelete }) => {\n  const { author, createdAt, text, file, likes, hearts, likeCount, heartCount } = message;\n\n  const [selfRef, isHovered] = useHover();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const admins = useCurrentRoom(v => v.admins);\n\n  const isMsgAuthorAdmin = admins.includes(author.uid);\n  const isAuthor = auth.currentUser.uid === author.uid;\n  const canGrantAdmin = isAdmin && !isAuthor;\n\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\n  const canShowIcons = isMobile || isHovered;\n\n  return (\n    <li\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\n      ref={selfRef}\n    >\n      <div className=\"displayflex align-items-center font-bolder mb-1\">\n        <UserStatus uid={author.uid} />\n        <USerAvatar\n          src={author.avatar}\n          name={author.name}\n          className=\"ml-1\"\n          size=\"xs\"\n        />\n        <ProfileinModal\n          profile={author}\n          appearance=\"link\"\n          className=\"p-0 ml-1 text-white\"\n        >\n          {canGrantAdmin && (\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\n              {isMsgAuthorAdmin\n                ? 'Remove admin permission'\n                : 'Give admin permission'}\n            </Button>\n          )}\n        </ProfileinModal>\n\n        <TimeAgo\n          datetime={createdAt}\n          className=\"font-normal text-grey-40 ml-2\"\n        />\n        {/* Message Reactions*/}\n        <IconFix\n          {...(isLiked ? { color: 'red' } : {})}\n          isVisible={canShowIcons}\n          iconName=\"heart\"\n          tooltip=\"Heart this message\"\n          onClick={() => handleLike(message.id)}\n          badgeContent={likeCount}\n        />\n        {/* Delete feature is author specific. Users can only delete their own messages */}\n        {isAuthor && (\n          <IconFix\n            isVisible={canShowIcons}\n            iconName=\"close\"\n            tooltip=\"Delete this message\"\n            onClick={() => handleDelete(message.id, file)} \n          />\n        )}\n      </div>\n      <div>\n        {text && <span className=\"break\">{text}</span>}{' '}\n        {file && renderFileMessage(file)}\n      </div>\n    </li>\n  );\n};\n\nexport default memo(ChatMessages);\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Alert } from 'rsuite';\nimport { auth, database, storage } from '../../../configs/firebase';\nimport { groupBy, ArrayId } from '../../../configs/helpers';\nimport ChatMessages from './ChatMessages';\n\n//Setting Page Size holder to 13 and sending a call to the database\nconst PAGE_SIZE = 13;\nconst messagesRef = database.ref('/messages');\n\nfunction ScrollBottom(node, threshold = 30) {\n  const percentage =\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\n  return percentage > threshold;\n}\n\nconst GroupMessages = () => {\n  const { chatId } = useParams();\n  const [messages, setMessages] = useState(null);\n  const [limit, setLimit] = useState(PAGE_SIZE);\n  const selfRef = useRef();\n\n  const isChatEmpty = messages && messages.length === 0;\n  const canShowMessages = messages && messages.length > 0;\n\n  const loadMessages = useCallback(\n    limitToLast => {\n      const node = selfRef.current;\n\n      messagesRef.off();\n      // listen for changes in messages\n      messagesRef\n        .orderByChild('roomId')\n        .equalTo(chatId) // from params\n        .limitToLast(limitToLast || PAGE_SIZE)\n        .on('value', snap => {\n          const data = ArrayId(snap.val());\n\n          setMessages(data);\n\n          if (ScrollBottom(node)) {\n            node.scrollTop = node.scrollHeight;\n          }\n        });\n      setLimit(prev => prev + PAGE_SIZE);\n    },\n    [chatId]\n  );\n\n  //Load More Function - Adjusts the chat window height and fires a callback to retrieve message history\n\n  const onLoadMore = useCallback(() => {\n    const node = selfRef.current;\n    const oldHeight = node.scrollHeight;\n\n    loadMessages(limit);\n\n    setTimeout(() => {\n      const newHeight = node.scrollHeight;\n      node.scrollTop = newHeight - oldHeight;\n    }, 200);\n  }, [loadMessages, limit]);\n\n  useEffect(() => {\n    const node = selfRef.current;\n    loadMessages();\n    setTimeout(() => {\n      node.scrollTop = node.scrollHeight;\n    }, 200);\n\n    return () => {\n      messagesRef.off('value'); \n    };\n  }, [loadMessages]);\n\n  // LastMessage is a property which basically stores the user's last message. \n  //On deletion, the message is removed from the database and the LastMessage prop. \n  //Post that, the second last message is pushed to the Last Message prop .\n\n  const handleDelete = useCallback(\n    async (msgId, file) => {\n      if (!window.confirm('Are you sure you want to delete this message?')) {\n        return;\n      }\n      const isLast = messages[messages.length - 1].id === msgId;\n      const updates = {};\n\n      updates[`/messages/${msgId}`] = null; // delete original message\n      if (isLast && messages.length > 1) {\n        updates[`/rooms/${chatId}/lastMessage`] = {\n          ...messages[messages.length - 2], \n          msgId: messages[messages.length - 2].id, \n        };\n      }\n      if (isLast && messages.length === 1) {\n        updates[`/rooms/${chatId}/lastMessage`] = null;\n      }\n      try {\n        await database.ref().update(updates);\n        Alert.info('Message has been deleted');\n      } catch (err) {\n        return Alert.error(err.message, 4000);\n      }\n\n      if (file) {\n        try {\n          const fileRef = storage.refFromURL(file.url);\n          await fileRef.delete();\n        } catch (err) {\n          Alert.error(err.message, 4000);\n        }\n      }\n    },\n    [chatId, messages]\n  );\n\n  \n//Admin Feature. Allows a user to handover admin privelege to another user, \n//thereafter which they share admin privileges\n\nconst handleAdmin = useCallback(\n  async uid => {\n    const adminsRef = database.ref(`/rooms/${chatId}/admins`);\n\n    let alertMsg;\n\n    await adminsRef.transaction(admins => {\n      if (admins) {\n        if (admins[uid]) {\n          admins[uid] = null;\n          alertMsg = 'Admin permission removed';\n        } else {\n          admins[uid] = true;\n          alertMsg = 'Admin permission granted';\n        }\n      }\n\n      return admins;\n    });\n\n    Alert.info(alertMsg, 4000);\n  },\n  [chatId]\n);\n\n//Like Function. When a user hearts a message, the function first checks whether the message exists\n// The count of likes is then appended by 1 and the number of likes is displayed on hover \n\n\nconst handleLike = useCallback(async msgId => {\n    const { uid } = auth.currentUser;\n    const messageRef = database.ref(`/messages/${msgId}`);\n\n    let alertMsg;\n\n    await messageRef.transaction(msg => {\n      if (msg) {\n        if (msg.likes && msg.likes[uid]) {\n          msg.likeCount -= 1;\n          msg.likes[uid] = null;\n          alertMsg = 'Like removed';\n        } else {\n          msg.likeCount += 1;\n          if (!msg.likes) {\n            msg.likes = {};\n          }\n          msg.likes[uid] = true;\n          alertMsg = 'Like added';\n        }\n      }\n\n      return msg;\n    });\n\n    Alert.info(alertMsg, 4000);\n  }, []);\n\n  // Grouping Messages by Date\n\n  const renderMessages = () => {\n    const groups = groupBy(messages, item =>\n      new Date(item.createdAt).toDateString()\n    );\n\n    let items = [];\n\n    Object.keys(groups).forEach(date => {\n      items.push(\n        <li key={date} className=\"text-center mb-1 padded\">\n          {date}\n        </li>\n      );\n\n      const msgs = groups[date].map(msg => (\n        <ChatMessages\n          key={msg.id}\n          message={msg}\n          handleAdmin={handleAdmin}\n          handleLike={handleLike}\n          handleDelete={handleDelete}\n        />\n      ));\n      items.push(...msgs);\n    });\n\n    return items;\n  };\n  return (\n    <ul ref={selfRef} className=\"indexlist scroll\">\n      {messages && messages.length >= PAGE_SIZE && (\n        <li className=\"text-center mt-2 mb-2\">\n          <button onClick={onLoadMore} className=\"widget\">\n            Load More\n          </button>\n        </li>\n      )}\n      {isChatEmpty && <div style={{marginLeft: '40%', marginTop: '20%', fontSize: '16px'}}><li>Start a conversation</li></div>}\n      {canShowMessages && renderMessages()}\n    </ul>\n  );\n};\n\n\n\nexport default GroupMessages;\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'rsuite';\nimport { useCurrentRoom } from '../../../context/userroom.context';\nimport { useMediaQuery } from '../../../configs/functional';\n\nimport \"../../../styles/main.scss\";\n\nconst VideoChatTop = () => {\n  const name = useCurrentRoom(v => v.name);\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  return (\n    <div>\n      <div className=\"displayflex justify-content-end align-items-center\">\n        <h4 className=\"text-disappear-2 displayflex align-items-center\">\n          <Icon\n            componentClass={Link}\n            to=\"/\"\n            icon=\"arrow-circle-left\"\n            size=\"2x\"\n            className={\n              isMobile\n                ? 'displayinline-block p-0 mr-2 text-blue link-unstyled'\n                : 'display1'\n            }\n          />\n        </h4>\n\n     <h5 className=\"text-center\" style={{fontSize:\"25px\", textAlign:\"center\", marginRight:\"43%\"}}>\n        CHAT\n        </h5>\n      </div>\n      <div className=\"displayflex justify-content-between align-items-center shiftup\">\n      </div>\n    </div>\n  );\n};\n\nexport default memo(VideoChatTop);\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Alert, Button, Icon, InputGroup, Modal, Uploader } from 'rsuite';\nimport { useModalState } from '../../../configs/functional';\nimport { storage } from '../../../configs/firebase';\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n\nconst MAX_FILE_SIZE = 1000 * 1024 * 5; // 5 mg in bytes\n\nconst SendFile = ({ afterUpload }) => {\n  const { chatId } = useParams();\n  const { isOpen, open, close } = useModalState();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [fileList, setFileList] = useState([]);\n\n  const handleChange = fileArr => {\n    const filtered = fileArr\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\n      .slice(0, 5);\n    setFileList(filtered);\n  };\n\n  const onUpload = async () => {\n    try {\n      const uploadPromises = fileList.map(file => {\n        return storage\n          .ref(`/chat/${chatId}`)\n          .child(Date.now() + file.name)\n          .put(file.blobFile, {\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\n          });\n      });\n      const uploadSnapshots = await Promise.all(uploadPromises);\n\n      const shapePromises = uploadSnapshots.map(async snapshot => {\n        return {\n          contentType: snapshot.metadata.contentType,\n          name: snapshot.metadata.name,\n          url: await snapshot.ref.getDownloadURL(),\n        };\n      });\n      const files = await Promise.all(shapePromises);\n\n      await afterUpload(files);\n      setIsLoading(false);\n      close();\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <>\n    <Tooltip\n    title=\"Send Files\"\n    placement=\"top\"\n    >\n      <InputGroup.Button onClick={open} style= {{backgroundColor:\"white\"}} >\n        <Icon icon=\"attachment\" />\n      </InputGroup.Button>\n      </Tooltip>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>Upload Files</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Uploader\n            autoUpload={false}\n            action=\"\"\n            fileList={fileList}\n            onChange={handleChange}\n            multiple\n            listType=\"picture-text\"\n            className=\"weighthundred\"\n            disabled={isLoading}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button block disabled={isLoading} onClick={onUpload}>\n            {' '}\n            Send to chat\n          </Button>\n          <div className=\"text-right mt-2\">\n            <small>* Files must be less than 5 mb.</small>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default SendFile;\n","import React, { useCallback, useState } from 'react';\nimport { ReactMic } from 'react-mic';\nimport { useParams } from 'react-router';\nimport { Alert, Icon, InputGroup } from 'rsuite';\nimport { storage } from '../../../configs/firebase';\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n\nconst SendAudioButton = ({ afterUpload }) => {\n  const { chatId } = useParams();\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const onClick = useCallback(() => {\n    setIsRecording(p => !p);\n  }, []);\n\n  const onUpload = useCallback(\n    async data => {\n      setIsUploading(true);\n      try {\n        const snapshot = await storage\n          .ref(`/chat/${chatId}`)\n          .child(`audio_${Date.now()}.mp3`)\n          .put(data.blob, {\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\n          });\n        const file = {\n          contentType: snapshot.metadata.contentType,\n          name: snapshot.metadata.name,\n          url: await snapshot.ref.getDownloadURL(),\n        };\n\n        setIsUploading(false);\n        afterUpload([file]);\n      } catch (error) {\n        setIsUploading(false);\n        Alert.error(error.message);\n      }\n    },\n    [afterUpload, chatId]\n  );\n\n  return (\n    <Tooltip\n    title=\"Record Audio\"\n    placement=\"top\"\n    >\n    <InputGroup.Button\n      onClick={onClick}\n      disabled={isUploading}\n      className={isRecording ? 'blink' : ''}\n      style= {{backgroundColor:\"white\"}}\n    >\n      <Icon icon=\"microphone\" />\n\n      <ReactMic\n        record={isRecording}\n        className=\"display1\"\n        onStop={onUpload}\n        mimeType=\"audio/mp3\"\n      />\n    </InputGroup.Button>\n    </Tooltip>\n  );\n};\n\nexport default SendAudioButton;\n","import styled from 'styled-components';\nimport EmojiPicker from 'emoji-picker-react';\n\nexport const EmojisContainer = styled.div`\noverflow-y: auto;\nmargin-left: 25px;\nposition: relative;\nwidth: 300px;\n`;\n\n\nexport const EmojiPickerContainer = styled(EmojiPicker)`\nposition: top;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmojiPickerContainer, EmojisContainer } from './emojis.styles';\n\n\nconst Emojis = ({ pickEmoji }) => {\n    return (\n        <EmojisContainer>\n            {\n                <EmojiPickerContainer onEmojiClick={pickEmoji} />\n                \n            }\n        </EmojisContainer>\n\n    );\n};\n\nEmojis.propTypes = {\n    pickEmoji: PropTypes.func\n};\n\nexport default Emojis;","import React, { memo } from 'react';\nimport { Button, Modal } from 'rsuite';\nimport { useCurrentRoom } from '../../../context/userroom.context';\nimport { useModalState } from '../../../configs/functional';\nimport { Icon } from 'rsuite';\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n\nconst RoomOutput = () => {\n  const { isOpen, open, close } = useModalState();\n  const description = useCurrentRoom(v => v.description);\n  const name = useCurrentRoom(v => v.name);\n\n  return (\n    <>\n     <Tooltip\n      title=\"Room Information\"\n      placement=\"top\"\n      >\n      <button \n      style= {{borderRadius: \"0px\", size: \"3em\",padding: \"5px 3px\", paddingLeft: \"16px\", paddingRight:\"6px\", backgroundColor:\"white\"}}\n      onClick={open}\n      style={{color: \"black\", backgroundColor: \"white\"}}>\n       <Icon icon=\"info-circle\" />\n      </button>\n      </Tooltip>  \n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>About {name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h5 className=\"mb-1\">Description</h5>\n          <p>{description}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={close} className=\"block-room\">\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default memo(RoomOutput);\n","import React, { useCallback, useState, useEffect, createRef } from 'react';\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\nimport firebase from 'firebase/app';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router';\nimport SendFile from './SendFile';\nimport { useProfile } from '../../../context/profile.context';\nimport { database } from '../../../configs/firebase';\nimport SendAudioButton from './SendAudioButton';\nimport Emojis from './emojis/emojis.component';\nimport \"../../../styles/main.scss\";\nimport RoomOutput from '../Nav/RoomOutput';\n\nfunction assembleMessage(profile, chatId) {\n\n  return {\n  roomId: chatId,\n  author: {\n    name: profile.name,\n    uid: profile.uid,\n    createdAt: profile.createdAt,\n    ...(profile.avatar ? { avatar: profile.avatar } : {}),\n  },\n  createdAt: firebase.database.ServerValue.TIMESTAMP,\n  likeCount: 0,\n};\n}\n\nconst Footer = () => {\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { profile } = useProfile();\n  const { chatId } = useParams();\n\n  const onInputChange = useCallback(value => {\n    setInput(value);\n  }, []);\n\n  const onSendClick = async () => {\n    if (input.trim() === '') {\n      return;\n    }\n    const msgData = assembleMessage(profile, chatId);\n    msgData.text = input;\n\n    const updates = {};\n    //   create last updates message,create messages in our database, get new unique key without creating the actual document\n    const messageId = database.ref('messages').push().key;\n    updates[`/messages/${messageId}`] = msgData;\n    updates[`/rooms/${chatId}/lastMessage`] = {\n      ...msgData,\n      msgId: messageId,\n    };\n\n    setIsLoading(true);\n    try {\n      await database.ref().update(updates);\n      setInput('');\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message);\n    }\n  };\n\n  const onKeyDown = ev => {\n    if (ev.keyCode === 13) {\n      ev.preventDefault();\n      onSendClick();\n    }\n  };\n\n  const afterUpload = useCallback(\n    async files => {\n      setIsLoading(true);\n\n      const updates = {};\n\n      files.forEach(file => {\n        const msgData = assembleMessage(profile, chatId);\n        msgData.file = file;\n        const messageId = database.ref('messages').push().key;\n        updates[`/messages/${messageId}`] = msgData;\n      });\n\n      const lastMsgId = Object.keys(updates).pop();\n\n      updates[`/rooms/${chatId}/lastMessage`] = {\n        ...updates[lastMsgId],\n        msgId: lastMsgId,\n      };\n\n      try {\n        await database.ref().update(updates);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        Alert.error(err.message);\n      }\n    },\n    [chatId, profile]\n  );\n\n  const inputRef = createRef();\n  const [showEmojis, setShowEmojis] = useState();\n  const [cursorPosition, setCursorPosition] = useState();\n\n  const pickEmoji = (e, {emoji}) => {\n   const ref = inputRef.current;\n   const start = input.substring(0, ref.selectionStart);\n   const end = input.substring(ref.selectionStart);\n   const msg = start + emoji;\n   setInput(msg);\n   setCursorPosition(start.length+emoji.length); \n  }; \n\n  const handleShowEmojis = () => {\n      setShowEmojis(!showEmojis);\n  };\n\n  useEffect(() => {\n    inputRef.current.selectionEnd = cursorPosition;\n  }, [cursorPosition]);\n\n\n    return (\n    <div>\n      <InputGroup style={{border:\"0px\"}} className=\"input-width\">\n        <RoomOutput />\n        <SendAudioButton afterUpload={afterUpload} />\n        <SendFile afterUpload={afterUpload} />\n        {\n        <div className={`emoji-list ${!showEmojis && 'hidden'}`}>\n          <Emojis pickEmoji={pickEmoji} />\n        </div>\n        }\n        <div id=\"mytext\">\n        <button className=\"emoji-icon\" onClick = {handleShowEmojis}> <Icon icon=\"smile-o\" style={{color: \"black\"}}/></button>\n        </div>\n        <Input\n          placeholder=\"Get creative\"\n          value={input}\n          ref={inputRef}\n          onChange={onInputChange}\n          onKeyDown={onKeyDown}\n          style={{color:\"black\"}}\n        />\n        <InputGroup.Button\n          color=\"blue\"\n          backgroundColor=\"#2b4a69\"\n          onClick={onSendClick}\n          disabled={isLoading}\n        >\n          <Icon icon=\"send\" />\n        </InputGroup.Button>\n      </InputGroup>\n    </div>\n  );\n};\n\n\nexport default Footer;\n\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport { Loader } from 'rsuite';\nimport GroupMessages from '../../components/Chat/ChatArea';\nimport VideoChatTop from '../../components/Chat/Nav/videocallindex';\nimport ChatFooter from '../../components/Chat/Footer';\nimport { useRooms } from '../../context/rooms.context';\nimport { CurrentRoomProvider } from '../../context/userroom.context';\nimport { Array } from '../../configs/helpers';\nimport { auth } from '../../configs/firebase';\nimport { useProfile } from '../../context/profile.context';\nimport {\n  useHistory\n} from \"react-router-dom\";\n\n\n//Separate chat component rendered during Videocall to avoid any cross referencing in the UI\n\nconst VideoCallChat = () => {\n  const { chatId } = useParams();\n  const rooms = useRooms();\n  const { profile, isLoading } = useProfile();\n  let {push} = useHistory();\n\n  /*Extra Error Cases; \n  Case 1: No rooms exist (Database gets corrupted or deleted) \n  Case 2: Room ID doesn't exist\n  Case 3: User is not authenticated\n  */\n \n  if (!rooms) {\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\n  }\n\n  const currentRoom = rooms.find(room => room.id === chatId);\n\n  if (!profile) {\n    return <h5 className=\"mt-page\">\n      Chat is not available in Guest mode <br />Login to access all features <br />\n     <button className=\"block-nav-2\" variant=\"danger\" onClick={() => push(\"/signin\")} style={{width: \"68%\",marginTop:\"15px\",marginRight: \"30px\"}}> Authenticate </button>\n    </h5>;\n  }\n\n  \n  if (!currentRoom) {\n    return <h5 className=\"text-right mt-page\">\n     Join a room to chat\n    </h5>;\n  }\n\n  const { name, description } = currentRoom;\n\n  const admins = Array(currentRoom.admins);\n  const isAdmin = admins.includes(auth.currentUser.uid);\n\n  const currentRoomData = {\n    name,\n    description,\n    admins,\n    isAdmin,\n  };\n  // Room Data is stored and passed on to Room State\n\n  return (\n    <CurrentRoomProvider data={currentRoomData}>\n      <div className=\"chatnav\">\n        <VideoChatTop />\n      </div>\n  \n    <div className=\"chatarea bg\">\n        <GroupMessages />\n      </div>\n      <div className=\"chatfooter bg\">\n        <ChatFooter />\n      </div>\n    </CurrentRoomProvider>\n  );\n};\n\nexport default VideoCallChat;\n","import * as React from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nconst Header = ({children}) => (\n    <Navbar className=\"justify-content-between bg-app\" expand=\"lg\" sticky=\"top\" variant=\"light\">\n    <Navbar.Brand href=\"/\">\n    </Navbar.Brand>\n    {children || null}\n  </Navbar>\n);\n\nexport default Header;","import moment from 'moment'; \nimport { saveAs } from 'file-saver';\nmoment().format(); \nexport default {\n    generateRandomString() {\n        return Math.random().toString( 36 ).slice( 2 ).substring( 0, 15 );\n    },\n\n\n    closeVideo( elemId ) {\n        if ( document.getElementById( elemId ) ) {\n            document.getElementById( elemId ).remove();\n            this.adjustVideoElemSize();\n        }\n    },\n\n\n    pageHasFocus() {\n        return !( document.hidden || document.onfocusout || window.onpagehide || window.onblur );\n    },\n\n\n    getQString( url = '', keyToReturn = '' ) {\n        url = url ? url : window.location.href;\n        let queryStrings = decodeURIComponent( url ).split( '#', 2 )[0].split( '?', 2 )[1];\n\n        if ( queryStrings ) {\n            let splittedQStrings = queryStrings.split( '&' );\n\n            if ( splittedQStrings.length ) {\n                let queryStringObj = {};\n\n                splittedQStrings.forEach( function ( keyValuePair ) {\n                    let keyValue = keyValuePair.split( '=', 2 );\n\n                    if ( keyValue.length ) {\n                        queryStringObj[keyValue[0]] = keyValue[1];\n                    }\n                } );\n\n                return keyToReturn ? ( queryStringObj[keyToReturn] ? queryStringObj[keyToReturn] : null ) : queryStringObj;\n            }\n\n            return null;\n        }\n\n        return null;\n    },\n\n\n    userMediaAvailable() {\n        return !!( navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia );\n    },\n\n\n    getUserFullMedia() {\n        if ( this.userMediaAvailable() ) {\n            return navigator.mediaDevices.getUserMedia( {\n                video: true,\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true\n                }\n            } );\n        }\n\n        else {\n            throw new Error( 'User media not available' );\n        }\n    },\n\n\n    getUserAudio() {\n        if ( this.userMediaAvailable() ) {\n            return navigator.mediaDevices.getUserMedia( {\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true\n                }\n            } );\n        }\n\n        else {\n            throw new Error( 'User media not available' );\n        }\n    },\n\n\n\n    shareScreen() {\n        if ( this.userMediaAvailable() ) {\n            return navigator.mediaDevices.getDisplayMedia( {\n                video: {\n                    cursor: \"always\"\n                },\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true,\n                    sampleRate: 44100\n                }\n            } );\n        }\n\n        else {\n            throw new Error( 'User media not available' );\n        }\n    },\n\n\n    getIceServer() {\n        return {\n            iceServers: [{   \n                urls: [ \"stun:ss-turn1.xirsys.com\" \n            ]}, {   \n                username: \"R44mgQPZ_HZxSXJbZRehQBjU_2rWIdq546HmpK958l_XrAj5rkK8e6Lt6_ssD8ULAAAAAF7kVy5zdW1pdGM=\",   \n                credential: \"14807cf8-ad2f-11ea-8c40-0242ac140004\",   \n                urls: [       \n                    \"turn:ss-turn1.xirsys.com:80?transport=udp\",       \n                    \"turn:ss-turn1.xirsys.com:3478?transport=udp\",       \n                    \"turn:ss-turn1.xirsys.com:80?transport=tcp\",       \n                    \"turn:ss-turn1.xirsys.com:3478?transport=tcp\",       \n                    \"turns:ss-turn1.xirsys.com:443?transport=tcp\",       \n                    \"turns:ss-turn1.xirsys.com:5349?transport=tcp\"   \n                ]\n            }]\n        };\n    },\n\n\n    addChat( data, senderType ) {\n        let chatMsgDiv = document.querySelector( '#chat-messages' );\n        let contentAlign = 'justify-content-end';\n        let senderName = 'You';\n        let msgBg = 'bg-white';\n\n        if ( senderType === 'remote' ) {\n            contentAlign = 'justify-content-start';\n            senderName = data.sender;\n            msgBg = '';\n\n            this.toggleChatNotificationBadge();\n        }\n\n        let infoDiv = document.createElement( 'div' );\n        infoDiv.className = 'sender-info';\n        infoDiv.innerHTML = `${ senderName } - ${ moment().format( 'Do MMMM, YYYY h:mm a' ) }`;\n\n        let colDiv = document.createElement( 'div' );\n        colDiv.className = `col-10 card chat-card msg ${ msgBg }`;\n        colDiv.innerHTML = data.msg;\n\n        let rowDiv = document.createElement( 'div' );\n        rowDiv.className = `row ${ contentAlign } mb-2`;\n\n\n        colDiv.appendChild( infoDiv );\n        rowDiv.appendChild( colDiv );\n\n        chatMsgDiv.appendChild( rowDiv );\n\n        /**\n         * Move focus to the newly added message but only if:\n         * 1. Page has focus\n         * 2. User has not moved scrollbar upward. This is to prevent moving the scroll position if user is reading previous messages.\n         */\n        if ( this.pageHasFocus ) {\n            rowDiv.scrollIntoView();\n        }\n    },\n\n\n    toggleChatNotificationBadge() {\n        if ( document.querySelector( '#chatarea' ).classList.contains( 'openchat' ) ) {\n            document.querySelector( '#new-chat-notification' ).setAttribute( 'hidden', true );\n        }\n\n        else {\n            document.querySelector( '#new-chat-notification' ).removeAttribute( 'hidden' );\n        }\n    },\n\n\n\n    replaceTrack( stream, recipientPeer ) {\n        let sender = recipientPeer.getSenders ? recipientPeer.getSenders().find( s => s.track && s.track.kind === stream.kind ) : false;\n\n        return sender ? sender.replaceTrack( stream ) : '';\n    },\n\n\n\n    toggleShareIcons( share ) {\n        let shareIconElem = document.querySelector( '#share-screen' );\n\n        if ( share ) {\n            shareIconElem.setAttribute( 'title', 'Stop sharing screen' );\n            shareIconElem.children[0].classList.add( 'text-primary' );\n            shareIconElem.children[0].classList.remove( 'text-app' );\n        }\n\n        else {\n            shareIconElem.setAttribute( 'title', 'Share screen' );\n            shareIconElem.children[0].classList.add( 'text-app' );\n            shareIconElem.children[0].classList.remove( 'text-primary' );\n        }\n    },\n\n\n    toggleVideoBtnDisabled( disabled ) {\n        document.getElementById( 'toggle-video' ).disabled = disabled;\n    },\n\n\n    maximiseStream( e ) {\n        let elem = e.target.parentElement.previousElementSibling;\n\n        elem.requestFullscreen() || elem.mozRequestFullScreen() || elem.webkitRequestFullscreen() || elem.msRequestFullscreen();\n        // document.querySelector('#close-single-peer-btn').style.display = 'block';\n\n        // e.target.parentElement.previousElementSibling.classList.remove('remote-video');\n        // e.target.parentElement.previousElementSibling.classList.add('single-peer-video');\n\n        // //hide the other elements\n        // let remoteVideoElems = document.getElementsByClassName('remote-video');\n\n        // if(remoteVideoElems.length){\n        //     for(let i = 0; i < remoteVideoElems.length; i++){\n        //         remoteVideoElems[i].style.display = 'none';\n        //     }\n        // }\n    },\n\n\n    singleStreamToggleMute( e ) {\n        if ( e.target.classList.contains( 'fa-microphone' ) ) {\n            e.target.parentElement.previousElementSibling.muted = true;\n            e.target.classList.add( 'fa-microphone-slash' );\n            e.target.classList.remove( 'fa-microphone' );\n        }\n\n        else {\n            e.target.parentElement.previousElementSibling.muted = false;\n            e.target.classList.add( 'fa-microphone' );\n            e.target.classList.remove( 'fa-microphone-slash' );\n        }\n    },\n\n\n    saveRecordedStream( stream, user ) {\n        let blob = new Blob( stream, { type: 'video/webm' } );\n\n        let file = new File( [blob], `${ user }-${ moment().unix() }-record.webm` );\n\n        saveAs( file );\n    },\n\n\n    toggleModal( id, show ) {\n        let el = document.getElementById( id );\n\n        if ( show ) {\n            el.style.display = 'block';\n            el.removeAttribute( 'aria-hidden' );\n        }\n\n        else {\n            el.style.display = 'none';\n            el.setAttribute( 'aria-hidden', true );\n        }\n    },\n\n\n\n    setLocalStream( stream, mirrorMode = true ) {\n        const localVidElem = document.getElementById( 'localuser' );\n\n        localVidElem.srcObject = stream;\n        mirrorMode ? localVidElem.classList.add( 'mirror-mode' ) : localVidElem.classList.remove( 'mirror-mode' );\n    },\n\n\n    adjustVideoElemSize() {\n        let elem = document.getElementsByClassName( 'card' );\n        let totalRemoteVideosDesktop = elem.length;\n        let newWidth = totalRemoteVideosDesktop <= 2 ? '50%' : (\n            totalRemoteVideosDesktop == 3 ? '33.33%' : (\n                totalRemoteVideosDesktop <= 8 ? '25%' : (\n                    totalRemoteVideosDesktop <= 15 ? '20%' : (\n                        totalRemoteVideosDesktop <= 18 ? '16%' : (\n                            totalRemoteVideosDesktop <= 23 ? '15%' : (\n                                totalRemoteVideosDesktop <= 32 ? '12%' : '10%'\n                            )\n                        )\n                    )\n                )\n            )\n        );\n\n\n        for ( let i = 0; i < totalRemoteVideosDesktop; i++ ) {\n            elem[i].style.width = newWidth;\n            elem[i].style.maxWidth = \"500px\";\n        }\n    },\n\n\n    createDemoRemotes( str, total = 6 ) {\n        let i = 0;\n\n        let testInterval = setInterval( () => {\n            let newVid = document.createElement( 'video' );\n            newVid.id = `demo-${ i }-video`;\n            newVid.srcObject = str;\n            newVid.autoplay = true;\n            newVid.className = 'remote-video';\n\n            //video controls elements\n            let controlDiv = document.createElement( 'div' );\n            controlDiv.className = 'remote-video-controls';\n            controlDiv.innerHTML = `<i class=\"fa fa-microphone text-app pr-3 mute-remote-mic\" title=\"Mute\"></i>`;\n\n            //create a new div for card\n            let cardDiv = document.createElement( 'div' );\n            cardDiv.className = 'card card-sm';\n            cardDiv.id = `demo-${ i }`;\n            cardDiv.appendChild( newVid );\n            cardDiv.appendChild( controlDiv );\n\n            //put div in master element\n            document.getElementById( 'videos' ).appendChild( cardDiv );\n\n            this.adjustVideoElemSize();\n\n            i++;\n\n            if ( i == total ) {\n                clearInterval( testInterval );\n            }\n        }, 2000 );\n    }\n};\n"," import h from './helpers.js';\n import io from 'socket.io-client';\n\n         var pc = [];\n \n         let socket = io( `/stream` );\n         \n         var myStream = '';\n         var socketIdentity = '';\n         var screen = '';\n         var recordedStream = [];\n         var mediaRecorder = '';\n \n     export const loadRtc = (meetingId) => {\n         const room = meetingId;\n         let commElem = document.getElementsByClassName( 'room-comm' );\n         const username = sessionStorage.getItem( 'username' );\n         for ( let i = 0; i < commElem.length; i++ ) {\n             commElem[i].attributes.removeNamedItem( 'hidden' );\n         }\n         //Get user video by default\n         getAndSetUserStream();\n \n \n         socket.on( 'connect', () => {\n             //set socketId\n             socketIdentity = socket.io.engine.id;\n \n \n             socket.emit( 'subscribe', {\n                 room: room,\n                 socketIdentity: socketIdentity\n             } );\n \n \n             socket.on( 'new user', ( data ) => {\n                 socket.emit( 'newuser', { to: data.socketIdentity, sender: socketIdentity } );\n                 pc.push( data.socketIdentity );\n                 init( true, data.socketIdentity );\n             } );\n \n \n             socket.on( 'newuser', ( data ) => {\n                 pc.push( data.sender );\n                 init( false, data.sender );\n             } );\n \n \n             socket.on( 'icecandidates', async ( data ) => {\n                 return data.candidate ? await pc[data.sender].addIceCandidate( new RTCIceCandidate( data.candidate ) ) : '';\n             } );\n \n \n             socket.on( 'dataOffer', async ( data ) => {\n                 if ( data.description.type === 'offer' ) {\n                     const session = data.description ? await pc[data.sender].setRemoteDescription( new RTCSessionDescription( data.description ) ) : '';\n \n                     h.getUserFullMedia().then( async ( stream ) => {\n                         if ( !document.getElementById( 'localuser' ).srcObject ) {\n                             h.setLocalStream( stream );\n                         }\n \n                         //save my stream\n                         myStream = stream;\n \n                         stream.getTracks().forEach( ( track ) => {\n                             pc[data.sender].addTrack( track, stream );\n                         } );\n \n                         let answer = await pc[data.sender].createAnswer();\n \n                         await pc[data.sender].setLocalDescription( answer );\n \n                         socket.emit( 'dataOffer', { description: pc[data.sender].localDescription, to: data.sender, sender: socketIdentity } );\n                     } ).catch( ( e ) => {\n                         console.error( e );\n                     } );\n                 }\n \n                 else if ( data.description.type === 'answer' ) {\n                     await pc[data.sender].setRemoteDescription( new RTCSessionDescription( data.description ) );\n                 }\n             } );\n \n \n             socket.on( 'securechat', ( data ) => {\n                 h.addChat( data, 'remote' );\n             } );\n         } );\n \n \n         function getAndSetUserStream() {\n             h.getUserFullMedia().then( ( stream ) => {\n                 //save my stream\n                 myStream = stream;\n \n                 h.setLocalStream( stream );\n             } ).catch( ( e ) => {\n                 console.error( `stream error: ${ e }` );\n             } );\n         }\n \n \n         function sendMsg( msg ) {\n             let data = {\n                 room: room,\n                 msg: msg,\n                 sender: username\n             };\n \n             //emit chat message\n             socket.emit( 'securechat', data );\n \n \n             //add localchat\n             h.addChat( data, 'localuser' );\n         }\n \n \n \n         function init( createOffer, partnerName ) {\n             pc[partnerName] = new RTCPeerConnection( h.getIceServer() );\n \n             if ( screen && screen.getTracks().length ) {\n                 screen.getTracks().forEach( ( track ) => {\n                     pc[partnerName].addTrack( track, screen );//should trigger negotiationneeded event\n                 } );\n             }\n \n             else if ( myStream ) {\n                 myStream.getTracks().forEach( ( track ) => {\n                     pc[partnerName].addTrack( track, myStream );//should trigger negotiationneeded event\n                 } );\n             }\n \n             else {\n                 h.getUserFullMedia().then( ( stream ) => {\n                     //save my stream\n                     myStream = stream;\n \n                     stream.getTracks().forEach( ( track ) => {\n                         pc[partnerName].addTrack( track, stream );//should trigger negotiationneeded event\n                     } );\n \n                     h.setLocalStream( stream );\n                 } ).catch( ( e ) => {\n                     console.error( `stream error: ${ e }` );\n                 } );\n             }\n \n \n \n             //create offer\n             if ( createOffer ) {\n                 pc[partnerName].onnegotiationneeded = async () => {\n                     let offer = await pc[partnerName].createOffer();\n \n                     await pc[partnerName].setLocalDescription( offer );\n \n                     socket.emit( 'dataOffer', { description: pc[partnerName].localDescription, to: partnerName, sender: socketIdentity } );\n                 };\n             }\n \n \n \n             //send ice candidate to partnerNames\n             pc[partnerName].onicecandidate = ( { candidate } ) => {\n                 socket.emit( 'icecandidates', { candidate: candidate, to: partnerName, sender: socketIdentity } );\n             };\n \n \n \n             //add client videos\n             pc[partnerName].ontrack = ( e ) => {\n                 let str = e.streams[0];\n                 if ( document.getElementById( `${ partnerName }-video` ) ) {\n                     document.getElementById( `${ partnerName }-video` ).srcObject = str;\n                 }\n \n                 else {\n                     //video element\n                     let newVid = document.createElement( 'video' );\n                     newVid.id = `${ partnerName }-video`;\n                     newVid.srcObject = str;\n                     newVid.autoplay = true;\n                     newVid.className = 'remote-video';\n \n                     //video controls elements - Mute remote video\n                     let controlDiv = document.createElement( 'div' );\n                     controlDiv.className = 'remote-video-controls';\n                     controlDiv.innerHTML = \n                     `<i class=\"fa fa-microphone text-app pr-3 mute-remote-mic\" title=\"Mute\"></i>`;\n                      let cardDiv = document.createElement( 'div' );\n                     cardDiv.className = 'card card-sm';\n                     cardDiv.id = partnerName;\n                     cardDiv.appendChild( newVid );\n                     cardDiv.appendChild( controlDiv );\n \n                     //Append Card div to the client videos\n                     document.getElementById( 'videos' ).appendChild( cardDiv );\n \n                     h.adjustVideoElemSize();\n                 }\n             };\n \n \n            //Edge Cases\n             pc[partnerName].onconnectionstatechange = ( d ) => {\n                 switch ( pc[partnerName].iceConnectionState ) {\n                     case 'disconnected':\n                     case 'failed':\n                         h.closeVideo( partnerName );\n                         break;\n \n                     case 'closed':\n                         h.closeVideo( partnerName );\n                         break;\n                 }\n             };\n \n \n \n             pc[partnerName].onsignalingstatechange = ( d ) => {\n                 switch ( pc[partnerName].signalingState ) {\n                     case 'closed':\n                         console.log( \"Signalling state has 'exited'\" );\n                         h.closeVideo( partnerName );\n                         break;\n                 }\n             };\n         }\n \n \n         //Share Screen\n \n         function shareScreen() {\n             h.shareScreen().then( ( stream ) => {\n                 h.toggleShareIcons( true );\n \n                 h.toggleVideoBtnDisabled( true );\n \n                 //save my screen stream\n                 screen = stream;\n \n                 //share the new stream with all users\n                 broadcastNewTracks( stream, 'video', false );\n \n                 //Switch off screen sharing\n                 //Adding a Listener for stream ended\n                 screen.getVideoTracks()[0].addEventListener( 'ended', () => {\n                     stopSharingScreen();\n                 } );\n             } ).catch( ( e ) => {\n                 console.error( e );\n             } );\n         }\n \n         //End Screen Share\n \n         function stopSharingScreen() {\n             h.toggleVideoBtnDisabled( false );\n \n             return new Promise( ( res, rej ) => {\n                const track = screen.getTracks().length ? screen.getTracks().forEach( track => track.stop() ) : '';\n \n                 res();\n             } ).then( () => {\n                 h.toggleShareIcons( false );\n                 broadcastNewTracks( myStream, 'video' );\n             } ).catch( ( e ) => {\n                 console.error( e );\n             } );\n         }\n \n \n        // Add new tracks from remote users\n         function broadcastNewTracks( stream, type, mirrorMode = true ) {\n             h.setLocalStream( stream, mirrorMode );\n \n             let track = type == 'audio' ? stream.getAudioTracks()[0] : stream.getVideoTracks()[0];\n \n             for ( let p in pc ) {\n                 let pName = pc[p];\n \n                 if ( typeof pc[pName] == 'object' ) {\n                     h.replaceTrack( track, pc[pName] );\n                 }\n             }\n         }\n \n         // Toggle Recording Icons is used when Recording starts\n         function toggleRecordingIcons( isRecording ) {\n             let e = document.getElementById( 'record' );\n \n             if ( isRecording ) {\n                 e.setAttribute( 'title', 'Stop recording' );\n                 e.children[0].classList.add( 'text-danger' );\n                 e.children[0].classList.remove( 'text-app' );\n             }\n \n             else {\n                 e.setAttribute( 'title', 'Record' );\n                 e.children[0].classList.add( 'text-app' );\n                 e.children[0].classList.remove( 'text-danger' );\n             }\n         }\n \n \n         //Chat textarea\n         document.getElementById( 'chat-input' ).addEventListener( 'keypress', ( e ) => {\n             if ( e.which === 13 && ( e.target.value.trim() ) ) {\n                 e.preventDefault();\n \n                 sendMsg( e.target.value );\n \n                 setTimeout( () => {\n                     e.target.value = '';\n                 }, 50 );\n             }\n         } );\n \n \n         //Toggle Video\n         document.getElementById( 'toggle-video' ).addEventListener( 'click', ( e ) => {\n             e.preventDefault();\n \n             let elem = document.getElementById( 'toggle-video' );\n \n             if ( myStream.getVideoTracks()[0].enabled ) {\n                 e.target.classList.remove( 'fa-video' );\n                 e.target.classList.add( 'fa-video-slash' );\n                 elem.setAttribute( 'title', 'Show Video' );\n \n                 myStream.getVideoTracks()[0].enabled = false;\n             }\n \n             else {\n                 e.target.classList.remove( 'fa-video-slash' );\n                 e.target.classList.add( 'fa-video' );\n                 elem.setAttribute( 'title', 'Hide Video' );\n \n                 myStream.getVideoTracks()[0].enabled = true;\n             }\n \n             broadcastNewTracks( myStream, 'video' );\n         } );\n \n \n         //Toggle Audio\n         document.getElementById( 'toggle-mute' ).addEventListener( 'click', ( e ) => {\n             e.preventDefault();\n \n             let elem = document.getElementById( 'toggle-mute' );\n \n             if ( myStream.getAudioTracks()[0].enabled ) {\n                 e.target.classList.remove( 'fa-microphone-alt' );\n                 e.target.classList.add( 'fa-microphone-alt-slash' );\n                 elem.setAttribute( 'title', 'Unmute' );\n \n                 myStream.getAudioTracks()[0].enabled = false;\n             }\n \n             else {\n                 e.target.classList.remove( 'fa-microphone-alt-slash' );\n                 e.target.classList.add( 'fa-microphone-alt' );\n                 elem.setAttribute( 'title', 'Mute' );\n \n                 myStream.getAudioTracks()[0].enabled = true;\n             }\n \n             broadcastNewTracks( myStream, 'audio' );\n         } );\n \n \n         //Add a click event listener on Share screen button click\n         document.getElementById( 'share-screen' ).addEventListener( 'click', ( e ) => {\n             e.preventDefault();\n \n             if ( screen && screen.getVideoTracks().length && screen.getVideoTracks()[0].readyState != 'ended' ) {\n                 stopSharingScreen();\n             }\n \n             else {\n                 shareScreen();\n             }\n         } );\n };\n \n \n  //When record button is clicked, user is asked what they want to record - Their video or the screen.\n export const record = ( type = 'screen' ) => {\n     if ( !mediaRecorder || mediaRecorder.state == 'inactive' ) {\n         if(type === 'screen') { \n             return recordScreen();\n         } else {\n             return recordVideo(); \n         }\n     }\n \n     else if ( mediaRecorder.state == 'paused' ) {\n         mediaRecorder.resume();\n     }\n \n     else if ( mediaRecorder.state == 'recording' ) {\n         mediaRecorder.stop();\n     }\n }\n \n function startRecording( stream ) {\n     const username = sessionStorage.getItem( 'username' );\n     mediaRecorder = new MediaRecorder( stream, {\n         mimeType: 'video/webm;codecs=vp9'\n     } );\n \n     mediaRecorder.start( 1000 );\n \n     mediaRecorder.ondataavailable = function ( e ) {\n         recordedStream.push( e.data );\n     };\n \n     mediaRecorder.onstop = function () {\n \n         h.saveRecordedStream( recordedStream, username );\n \n         setTimeout( () => {\n             recordedStream = [];\n         }, 3000 );\n     };\n \n     mediaRecorder.onerror = function ( e ) {\n         console.error( e );\n     };\n }\n \n \n // Case 1 : Record screen\n const recordScreen = () => {\n \n     if ( screen && screen.getVideoTracks().length ) {\n         startRecording( screen );\n         return true;\n     }\n \n     else {\n         return h.shareScreen().then( ( screenStream ) => {\n             startRecording( screenStream );\n             return true;\n         } ).catch( () => { \n//Error Handling \n             return false;\n         } );\n     }\n }\n \n \n //Case 2 : Record local video\n const recordVideo = () => {\n \n     if ( myStream && myStream.getTracks().length ) {\n         startRecording( myStream );\n         return true;\n     }\n \n     else {\n         h.getUserFullMedia().then( ( videoStream ) => {\n             startRecording( videoStream );\n             return true;\n         } ).catch( () => { return false; } );\n     }\n }\n ","import React from 'react';\nimport \"./actions.css\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n\nexport default function VideoNavButtons(props) {\n  return (\n    <nav className=\"col-4 col-md-4 col-xs-12 offset-md-5 fixed-bottom rounded-0 stream-actions\" style={{zIndex: 999}}>\n            <div className=\"pull-right room-comm navalign\" hidden>\n            <Tooltip\n                title=\"Toggle Video\"\n                placement=\"bottom\"\n                 >\n                <button className=\"block-nav-2 btn-no-effect mr-3 mb-4\" id='toggle-video' title=\"Hide Video\">\n                    <i className=\"fa fa-video fa-1x text-app\"></i>\n                </button>\n            </Tooltip>\n            <Tooltip\n                title=\"Toggle Audio\"\n                placement=\"bottom\"\n                 >\n                <button className=\"block-nav-2 btn-no-effect mr-3 mb-4\" id='toggle-mute' title=\"Mute\">\n                    <i className=\"fa fa-microphone-alt fa-1x text-app\"></i>\n                </button>\n            </Tooltip>  \n            <Tooltip\n                title=\"Share Screen\"\n                placement=\"bottom\"\n                 >\n                <button className=\"block-nav-2 btn-no-effect mr-3 mb-4\" id='share-screen' title=\"Share screen\">\n                    <i className=\"fa fa-desktop fa-1x text-app\"></i>\n                </button>\n            </Tooltip>  \n            <Tooltip\n                title=\"Chat\"\n                placement=\"bottom\"\n                 >\n                <button style={{width: '25%'}} className=\"block-nav-2 col-md-9 text-app pull-right btn-no-effect mr-3 mb-4\" id='chattoggle'>\n                    <i className=\"fa fa-comment fa-1x\"></i> <span className=\"badge badge-danger very-small font-weight-lighter\" id='new-chat-notification' hidden>New</span>\n                </button>\n                </Tooltip>\n            </div>\n        </nav>\n  );\n}\n","import React, { useState } from \"react\";\n\n// Recording Buttons\nconst RecordingView =  () => (<div className=\"custom-modal\" id='recording-modal' style={{display: 'none'}}>\n            <div className=\"custom-modal-content\">\n                <div className=\"row text-center\">\n                    <div className=\"col-md-6 mb-2\">\n                        <span className=\"record-option\" id='record-video'>Record video</span>\n                    </div>\n                    <div className=\"col-md-6 mb-2\">\n                        <span className=\"record-option\" id='record-screen'>Record screen</span>\n                    </div>\n                </div>\n\n                <div className=\"row mt-3\">\n                    <div className=\"col-md-12 text-center\">\n                        <button className=\"btn btn-outline-danger\" id='closerecording'>Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>);\n\nexport default RecordingView;","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Route, Switch } from 'react-router';\nimport { Col, Grid, Row } from 'rsuite';\nimport { UserRooms } from '../../../../context/rooms.context';\nimport VideoCallChat from '../../../../UserLanding/Home/VideoCallChat';\nimport Header from \"../VideoNav\";\nimport { ChatEvent } from \"../../socketConnections/actions\"\nimport { loadRtc, record } from \"../../socketConnections/rtcConnections\";\nimport VideoNavButtons from \"../VideoNavButtons\";\nimport RecordingView from \"./Recording\";\nimport \"../../App.css\";\nimport $ from 'jquery'; \nimport {\n    useParams,\n    useHistory\n  } from \"react-router-dom\";\nimport \"../../../../styles/main.scss\";\nimport { useProfile } from '../../../../context/profile.context';\n\n//Create Meeting Room\nconst MeetingRoom = () => {\n    const { profile } = useProfile();\n    const { roomLink } = React.useState(\"\");\n    const {meetingId, chatId} = useParams();\n    const [isRecording, setIsRecording] = useState(false);\n    let {push} = useHistory();\n\n    useEffect(() => {\n        ChatEvent();\n        loadRtc(meetingId);\n    }, [meetingId]);\n\n// Recording Button Toggle. WebRTC Recording logic is imported from rtcConnections\n\n    const startRecording = async (type) => {\n            const isStarted = await record(type);\n            console.log(isStarted)\n            setIsRecording(isStarted);\n    }\n\n    const stopRecording = () => {\n            record();\n            setIsRecording(false);\n    }\n\n//Copy to Clipboard function\n    \n    function copyToClipboard(element) {\n        var $temp = $(\"<input>\");\n        $(\"body\").append($temp);\n        $temp.val($(element).text()).select();\n        document.execCommand(\"copy\");\n        $temp.remove(); \n      }\n\n// If user is authenticated and joining in a group videocall, chat history will persist and the room \n// members will be able to continue their conversation \n\n    if (profile) {\n        return (\n        <>\n            <RecordingView />\n            <Header>\n            <VideoNavButtons />\n            <p id=\"p2\" hidden> https://intouch-videocall.herokuapp.com/{chatId}</p>\n            <div>\n                {!isRecording && <button className=\"block\" variant=\"outline-info\" onClick={() => startRecording('media')} style={{width:\"10%\",marginRight: 10, marginTop: 5}}>Record Video</button>}{'  '}\n                {!isRecording &&<button className=\"block\" variant=\"outline-info\" onClick={() => startRecording('screen')} style={{width:\"10%\",marginRight: 10, marginTop: 5}}>Record Screen</button>}{'   '}\n                {isRecording && <button className=\"block\" variant=\"outline-danger\" onClick={() => stopRecording()} style={{width:\"18%\", marginRight: 10, marginTop: 5}}>Stop Recording</button>}{'   '}\n                <button className=\"block\" onClick={copyToClipboard('#p2')} style={{width:\"10%\", marginRight: 10, marginTop: 5}}>\n                Share Link\n                </button>{'  '}\n                <button className=\"block\" variant=\"danger\" onClick={() => push(\"/signin\")} style={{width:\"10%\", marginRight: 10, marginTop: 5}}>Leave Session</button>{'  '}\n                {!profile && <button className=\"block\" variant=\"danger\" onClick={() => push(\"/\")} style={{width:\"19%\", marginRight: 10, marginTop: 5, padding: '5px 5px'}}>Sign up for InTouch-Teams</button>}{'  '}\n                </div>\n            </Header>\n\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-12 main\" id='master'>\n                    <video className=\"local-video mirror-mode\" id='localuser' volume='0' autoPlay muted></video>\n                    <div className=\"row mt-2 mb-2\" id='videos' style={{marginRight: '300px'}}></div>\n                    </div>\n                    <div className=\"col-md-3 chat-col d-print-none mb-2 bg-app-secondary\" id='chatarea' hidden>              \n                    <UserRooms>\n                    <Grid fluid className=\"heighthundred\">\n                        <Row className=\"heighthundred\">\n                        <Switch>\n                            <Route exact path=\"/:chatId\">\n                            <Col xs={24} md={24} className=\"heighthundred\">\n                                <VideoCallChat />\n                            </Col>\n                            </Route>\n                        </Switch>\n                        </Row>\n                    </Grid>\n                    </UserRooms> \n                    </div>\n                </div>\n            </div>\n        </> ); \n\n  //In Guest Mode, chat history will not persist. \n  //Chat will be anonymous and will vanish as soon as the videocall ends\n\n        } return ( \n           <>\n            <RecordingView />\n            <Header>\n            <VideoNavButtons />\n            <p id=\"p1\" hidden> https://intouch-videocall.herokuapp.com/{chatId}</p>\n                <div>\n                {!isRecording && <button className=\"block\" variant=\"outline-info\" onClick={() => startRecording('media')} style={{width:\"10%\",marginRight: 10, marginTop: 5}}>Record Video</button>}{'  '}\n                {!isRecording &&<button className=\"block\" variant=\"outline-info\" onClick={() => startRecording('screen')} style={{width:\"10%\",marginRight: 10, marginTop: 5}}>Record Screen</button>}{'   '}\n                {isRecording && <button className=\"block\" variant=\"outline-danger\" onClick={() => stopRecording()} style={{width:\"18%\", marginRight: 10, marginTop: 5}}>Stop Recording</button>}{'   '}\n                <button className=\"block\" onClick={copyToClipboard('#p1')} style={{width:\"10%\", marginRight: 10, marginTop: 5}}>\n                Share Link\n                </button>{'  '}\n                <button className=\"block\" variant=\"danger\" onClick={() => push(\"/signin\")} style={{width:\"10%\", marginRight: 10, marginTop: 5}}>Leave Session</button>{'  '}\n                {!profile && <button className=\"block\" variant=\"danger\" onClick={() => push(\"/\")} style={{width:\"19%\", marginRight: 10, marginTop: 5, padding: '5px 5px'}}>Sign up for InTouch-Teams</button>}{'  '}\n                </div>\n            </Header>\n\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-12 main\" id='master'>\n                    <video className=\"local-video mirror-mode\" id='localuser' volume='0' autoPlay muted></video>\n                    <div className=\"row mt-2 mb-2\" id='videos' style={{marginRight: '300px'}}></div>\n                    </div>\n                    <div className=\"col-md-3 chat-col d-print-none mb-2 bg-app-secondary\"  style={{backgroundColor: '#2b4a69'}} id='chatarea'  hidden>   \n                    <div className=\"row\" style={{width: '300px',textAlign: 'center', fontSize: '19px' }}>\n                            <div className=\"col-12 text-center h2 mb-3\" style={{ marginLeft: '25px'}}>CHAT</div>\n                        </div>\n\n                        <div id='chat-messages'></div>\n\n                        <div className=\"row\">\n                            <textarea id='chat-input' style={{color: 'black', maxWidth: 'auto'}} className=\"form-control rounded-0 chat-box border-info\" rows='3' placeholder=\"Get creative\"></textarea>\n                        </div> \n                    </div>\n                </div>\n            </div>\n        </> \n        );\n}\n\nexport default MeetingRoom;","import helpers from './helpers.js';\n\nexport const ChatEvent = () => {\n    //When the chat icon is clicked, chat is toggled and adds \n    document.querySelector( '#chattoggle' ).addEventListener( 'click', ( e ) => {\n        let chatElem = document.querySelector( '#chatarea' );\n        let mainSecElem = document.querySelector( '#master' );\n\n        if ( chatElem.classList.contains( 'openchat' ) ) {\n            chatElem.setAttribute( 'hidden', true );\n            chatElem.classList.remove( 'openchat' );\n        }\n\n        else {\n            chatElem.attributes.removeNamedItem( 'hidden' );\n            chatElem.classList.add( 'openchat' );\n        }\n\n        setTimeout( () => {\n            if ( document.querySelector( '#chatarea' ).classList.contains( 'openchat' ) ) {\n                helpers.toggleChatNotificationBadge();\n            }\n        }, 300 );\n    } );\n\n\n    //Enable picture-in-picture for local user\n    document.getElementById( 'localuser' ).addEventListener( 'click', () => {\n        if ( !document.pictureInPictureElement ) {\n            document.getElementById( 'localuser' ).requestPictureInPicture()\n                .catch( error => {\n                    console.error( error );\n                } );\n        }\n\n        else {\n            document.exitPictureInPicture()\n                .catch( error => {\n                    // If Video fails to leave Picture-in-Picture mode.\n                    console.error( error );\n                } );\n        }\n    } );\n\n\n    document.addEventListener( 'click', ( e ) => {\n        if ( e.target && e.target.classList.contains( 'expand-remote-video' ) ) {\n            helpers.maximiseStream( e );\n        }\n\n        else if ( e.target && e.target.classList.contains( 'mute-remote-mic' ) ) {\n            helpers.singleStreamToggleMute( e );\n        }\n    } );\n\n\n    document.getElementById( 'closerecording' ).addEventListener( 'click', () => {\n        helpers.toggleModal( 'recording-modal', false );\n    } );\n}\n","import React from 'react';\n\n//Template Error Boundary File\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return (\n        <div>\n          <h2>Your valiant efforts seem to have broken the system. Never Worry. We'll send help right away</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useState, useRef, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport { auth, database } from '../configs/firebase';\nimport { Alert, Col, Container, Grid, Icon, Panel, Row } from 'rsuite';\nimport \"../styles/main.scss\";\nimport { useHistory } from 'react-router-dom';\nimport { useProfile } from '../context/profile.context';\nimport GLOBE from 'vanta/dist/vanta.globe.min'; \n// Using Animated background from Vanta\nimport teams from \"../assets/teams.svg\";\n\nconst SignIn = () => {\n  const { profile } = useProfile();\n  let {push} = useHistory();\n  const signInWithProvider = async provider => {\n    try {\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\n      //  Add new users to the realtime firebase database with name and timestamp\n      if (additionalUserInfo.isNewUser) {\n        await database.ref(`/profiles/${user.uid}`).set({\n          name: user.displayName,\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\n        });\n      }\n      Alert.success('Signed in', 4000);\n \n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n//Firebase Google Signin\n  const onGoogleSignIn = () => {\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\n    if (profile) {push(\"/\");}\n  };\n\n  //Animated Background\n  const MyComponent = (props) => {\n    const [vantaEffect, setVantaEffect] = useState(0)\n    const myRef = useRef(null)\n    useEffect(() => {\n      if (!vantaEffect) {\n        setVantaEffect(GLOBE({\n          el: myRef.current,\n          color: '#2b4a69',\n          color2: '#0xa6a3a3',\n          size: 0.9\n        }))\n      }\n      return () => {\n        if (vantaEffect) vantaEffect.destroy()\n      }\n    }, [vantaEffect])\n    return <div ref={myRef}>\n      \n    <Container>\n        <Grid className=\"mt-page\">\n          <Row>\n            {/* center mdOffset={6}  */}\n            <Col xs={24} md={12} mdOffset={2}>\n              <Panel>\n                <div className=\"text-align\">\n                  Stay <br /> InTouch <br /> with <img src={teams} style={{width: '100px', height: '100px', display: 'inline-block'}}/>\n                </div>\n                <div className=\"mt-3\">\n                  {/* Entry for Aunthenticated User */}\n               <button className=\"block-edit\" style={{width:\"45%\"}} onClick={onGoogleSignIn}>\n                    <Icon icon=\"google\" /> Sign up for InTouch\n                  </button>\n                  {/* Entry to Guest Mode */}\n                  <button className=\"block-edit\" style={{width:\"45%\"}} onClick={(e) => {\n                    e.preventDefault();\n                    window.open(`/videocall`, \"_self\");\n                    }}>\n                    Start VideoCall as a Guest\n                  </button>\n                </div>\n              </Panel>\n            </Col>\n          </Row>\n        </Grid>\n      </Container>\n    </div>\n  }  \n  \n  return (\n \n    <MyComponent />\n \n  );\n};\n\nexport default SignIn;\n\n","const generateRandomString = () => {\n    return Math.random().toString( 16 ).slice( 2 ).substring( 0, 8);\n}\nexport const createRoom = () => {\n    let roomName = generateRandomString();\n    let yourName = 'Anonymous';\n    //save the user's name in sessionStorage\n    sessionStorage.setItem( 'username', yourName );\n\n    //create room link\n    let roomLink = `${ window.location.origin }/${ roomName.trim().replace( ' ', '_' ) }_${ generateRandomString() }`;\n\n    return roomLink;\n};\n","import * as React from \"react\";\nimport { useState, useRef, useEffect } from 'react';\nimport {createRoom} from \"../../services/CreateRoom\";\nimport Button from 'react-bootstrap/Button';\nimport \"../../../../styles/main.scss\";\nimport $ from 'jquery'; \nimport NET from 'vanta/dist/vanta.net.min';\nimport { Alert } from 'rsuite';\n\n\nconst Homevideo = () => {\n    const [roomLink, setRoomLink] = React.useState(\"\");\n    const makeRoom = (e) => {\n        e.preventDefault();\n        const room = createRoom();\n        setRoomLink(room);\n    }\n    \n  const Background = (props) => {\n    const [vantaEffect, setVantaEffect] = useState(0)\n    const myRef = useRef(null)\n    useEffect(() => {\n      if (!vantaEffect) {\n        setVantaEffect(NET({\n          el: myRef.current,\n          color: '#2b4a69',\n          color2: '#0xa6a3a3'\n        }))\n      }\n      return () => {\n        if (vantaEffect) vantaEffect.destroy()\n      }\n    }, [vantaEffect])\n\n\n    function copyToClipboard(element) {\n      var $temp = $(\"<input>\");\n      $(\"body\").append($temp);\n      $temp.val($(element).text()).select();\n      document.execCommand(\"copy\");\n      $temp.remove();\n      \n    }\n    return <div ref={myRef}>\n        \n              <Button \n              className=\"block\" \n              style={{width: '20%', padding: \"8px 8px\", marginTop: \"20%\", marginLeft: \"39%\"}} \n              onClick={makeRoom} >\n                Create New Room\n            </Button>\n            { roomLink && Alert.success('Room has been created. Join in!', 60000) && <div className=\"mt-2\">\n                <a href={roomLink}>\n                <button className=\"block\" style={{width: '20%', padding: \"8px 8px\", marginTop: \"1%\", marginLeft: \"39%\"}}>\n                Join Room\n                </button>\n                </a> \n                <a>\n                <p id=\"p1\" hidden>{roomLink}</p>\n                <button className=\"block\" onClick={copyToClipboard('#p1')} style={{width: '20%', padding: \"8px 8px\", marginTop: \"1%\", marginLeft: \"39%\"}}>\n                Share Room Link\n                </button>\n                </a>\n            </div>}\n        \n    </div>\n  }  \n  \n  return (\n \n    <Background />\n \n  );\n};\n    \n\nexport default Homevideo;","import React, { useState, useCallback, useRef } from 'react';\nimport {\n  Alert,\n  Button,\n  ControlLabel,\n  Form,\n  FormControl,\n  FormGroup,\n  Icon,\n  Modal,\n  Schema,\n} from 'rsuite';\nimport firebase from 'firebase/app';\nimport { useModalState } from '../../configs/functional';\nimport { database, auth } from '../../configs/firebase';\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst { StringType } = Schema.Types;\nconst model = Schema.Model({\n  name: StringType().isRequired('Chat name is required'),\n  description: StringType().isRequired('Description is required'),\n});\n\nconst INITIAL_FORM = {\n  name: '',\n  description: '',\n};\n\nconst CreateRoom = () => {\n  const { isOpen, open, close } = useModalState();\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\n  const [isLoading, setIsLoading] = useState(false);\n  const formRef = useRef();\n\n  const onFormChange = useCallback(value => {\n    setFormValue(value);\n  }, []);\n\n  const onSubmit = async () => {\n    if (!formRef.current.check()) return;\n    setIsLoading(true);\n\n    // save obj to database\n    const newRoomData = {\n      ...formValue,\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\n      admins: {\n        [auth.currentUser.uid]: true,\n      }\n    };\n    try {\n      await database.ref('rooms').push(newRoomData); // push new value\n      Alert.info(`${formValue.name} has been created`, 4000);\n      setIsLoading(false);\n      setFormValue(INITIAL_FORM);\n      close(); //close modal window\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <div className=\"mt-1\">\n        <Tooltip\n        title=\"Create new room\"\n        placement=\"top\"\n        >\n      <button className = \"block-right\" style={{padding: '9px 7px'}} onClick={open}>\n        <Icon icon=\"plus\" />\n      </button>\n      </Tooltip>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>New Chatroom</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form\n            fluid\n            onChange={onFormChange}\n            formValue={formValue}\n            model={model}\n            ref={formRef}\n          >\n            <FormGroup>\n              <ControlLabel>Room name</ControlLabel>\n              {/* input */}\n              <FormControl name=\"name\" placeholder=\"Enter chat room name\" />\n            </FormGroup>\n\n            <FormGroup>\n              <ControlLabel>Description</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                rows={5}\n                name=\"description\"\n                placeholder=\"Enter room description\"\n              />\n            </FormGroup>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            className = \"block\"\n            onClick={onSubmit}\n            disabled={isLoading}\n            style={{backgroundColor:\"#2b4a69\",color:\"white\"}}\n          >\n            Create new chat room\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CreateRoom;\n","import React, { useState, useCallback } from 'react';\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\n\nconst EditNow = ({\n  initialValue,\n  onSave,\n  label = null,\n  placeholder = 'Write your value',\n  emptyMsg = 'Input is empty',\n  wrapperClassName = '',\n  ...inputProps\n}) => {\n  // internal state\n  const [input, setInput] = useState(initialValue);\n  const [isEditable, setIsEditable] = useState(false);\n\n  // for the RSuite, we don't need to pass `e.target.value`\n  const onInputChange = useCallback(value => {\n    setInput(value);\n  }, []);\n\n  const onEditClick = useCallback(() => {\n    setIsEditable(p => !p); // reverse boolean\n    setInput(initialValue); // set to initial value\n  }, [initialValue]);\n\n  const onSaveClick = async () => {\n    const trimmed = input.trim();\n    if (trimmed === '') {\n      Alert.info(emptyMsg, 4000);\n    }\n\n    if (trimmed !== initialValue) {\n      await onSave(trimmed); // dashboard\n    }\n    setIsEditable(false);\n  };\n\n  return (\n    <div className={wrapperClassName}>\n      {label}\n      <InputGroup className=\"w-e\" >\n        <Input\n          {...inputProps}\n          disabled={!isEditable}\n          placeholder={placeholder}\n          onChange={onInputChange}\n          value={input}\n        />\n\n        <InputGroup.Button onClick={onEditClick}>\n          {/* edit2 is an icon */}\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\n        </InputGroup.Button>\n\n        {isEditable && (\n          <InputGroup.Button onClick={onSaveClick}>\n            <Icon icon=\"check\" />\n          </InputGroup.Button>\n        )}\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default EditNow;\n","import { auth } from '../../configs/firebase'\nimport firebase from 'firebase/app';\nimport React, {useState} from 'react'\nimport { Alert, Button, Icon, Tag } from 'rsuite';\n\nconst ProfileLink = () => {\n    // access current user info\n    const [isConnected, setIsConnected] = useState({\n        'google.com' : auth.currentUser.providerData.some((data) => data.providerId === 'google.com'), \n    });\n\n    const updateIsConnected = (providerId , value) => {\n        setIsConnected(prev => {\n            return {\n                ...prev,\n                [providerId]: value\n            }\n        });\n    }\n\n    const unlink = async (providerId) => {\n        try {\n            if(auth.currentUser.providerData.length === 1 ){\n                throw new Error(`You cannot disconnect from ${providerId}`)\n            }\n\n            await auth.currentUser.unlink(providerId);\n            updateIsConnected(providerId, false);\n            Alert.info(`Disconnected from ${providerId}`, 4000)\n\n        }catch(err){\n            Alert.error(err.message, 4000)\n        }\n    }\n\n    const unlinkGoogle = () => {\n        unlink('google.com')\n    }\n\n    // return provider object\n    const link = async (provider) => {\n        try {\n           await auth.currentUser.linkWithPopup(provider);\n           Alert.info(`Linked to ${provider.providerId} `, 4000);\n        \n           updateIsConnected(provider.providerId, true);\n        }catch(err){\n            Alert.error(err.message, 4000)\n        }\n    }\n\n\n    const linkGoogle = () => {\n        link(new firebase.auth.GoogleAuthProvider())\n    }\n\n    return (\n        <div>\n            {isConnected[\"google.com\"] && \n                <Tag closable color=\"green\" onClose={unlinkGoogle}>\n                        <Icon icon=\"google\" /> Connected\n                </Tag>\n            }\n           \n            <div className=\"mt-2\">\n                {!isConnected[\"google.com\"] && \n                    <Button className=\"block-socials\" onClick={linkGoogle}>\n                        <Icon icon=\"google\" /> Link to Google\n                    </Button>\n                } \n               \n            </div>\n        </div>\n    )\n}\n\nexport default ProfileLink;\n","import React, { useState, useRef } from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport { Alert, Button, Modal } from 'rsuite';\nimport { useProfile } from '../../context/profile.context';\nimport { useModalState } from '../../configs/functional';\nimport { storage, database } from '../../configs/firebase';\nimport { Updates } from '../../configs/helpers';\nimport USerAvatar from './UserAvatar';\n\nconst fileInputTypes = '.png, .jpeg, .jpg';\n\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\n\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\n\nconst getBlob = canvas => {\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(blob => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject(new Error('File process error'));\n      }\n    });\n  });\n};\n\nconst ReactAvatar = () => {\n  const { isOpen, open, close } = useModalState();\n  const { profile } = useProfile();\n\n  const [img, setImg] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const avatarEditorRef = useRef(); // access for avatar canvas\n\n  const onFileInputChange = e => {\n    const currFiles = e.target.files; // returns an array of files\n    if (currFiles.length === 1) {\n      const file = currFiles[0];\n      if (isValidFile(file)) {\n        setImg(file);\n        open();\n      } else {\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\n      }\n    }\n  };\n\n  const onUploadClick = async () => {\n    // get access to edited image/ canvas\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\n    setIsLoading(true);\n\n    try {\n      const blob = await getBlob(canvas);\n      const avatarFileRef = storage\n        .ref(`/profile/${profile.uid}`)\n        .child('avatar');\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\n        // Metadata for the newly uploaded object.\n        cacheControl: `public, max-age = ${3600 * 24 * 3}`,\n      });\n\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\n\n      const updates = await Updates(\n        profile.uid,\n        'avatar',\n        downloadUrl,\n        database\n      );\n      await database.ref().update(updates);\n\n      setIsLoading(false);\n      Alert.info('Avatar has been downloaded', 4000);\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <div className=\"mt-3 text-center\">\n      <USerAvatar\n        src={profile.avatar}\n        name={profile.name}\n        className=\"widthtwo heighttwo bigsize font-huge\"\n      />\n      <div>\n        <label\n          htmlFor=\"avatar-upload\"\n          className=\"displayblock cursor-pointer padded-black text-black-sharp\"\n          style={{display: 'block'}}\n        >\n          Select New Avatar\n          <input\n            id=\"avatar-upload\"\n            type=\"file\"\n            className=\"display1\"\n            accept={fileInputTypes}\n            onChange={onFileInputChange}\n          />\n        </label>\n\n        <Modal show={isOpen} onHide={close}>\n          <Modal.Header>\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"displayflex justify-content-center align-items-center heighthundred\">\n              {img && (\n                <AvatarEditor\n                  // shows up as a canvas element\n                  ref={avatarEditorRef}\n                  image={img}\n                  width={200}\n                  height={200}\n                  border={10}\n                  borderRadius={100}\n                  rotate={0}\n                />\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              appearance=\"ghost\"\n              block\n              onClick={onUploadClick}\n              disabled={isLoading}\n            >\n              Upload new avatar\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default ReactAvatar;\n","import React from 'react';\nimport { Alert, Button, Divider, Drawer } from 'rsuite';\nimport { database } from '../../configs/firebase';\nimport { useProfile } from '../../context/profile.context';\nimport EditNow from '../common/EditComponent';\nimport ProfileLink from './ProfileLinking';\nimport ReactAvatar from './ReactAvatar';\nimport { Updates } from '../../configs/helpers';\n\nconst Profile = ({ onSignOut }) => {\n  const { profile } = useProfile();\n\n  const onSave = async newData => {\n\n    try {\n      //   await userNicknameRef.set(newData);\n      const updates = await Updates(\n        profile.uid,\n        'name',\n        newData,\n        database\n      );\n      await database.ref().update(updates);\n      Alert.success('Nickname has been updated', 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <>\n    \n      <Drawer.Body>\n        <h3>Hey, {profile.name}</h3>\n\n        <ProfileLink className=\"y-m\"/>\n\n        <Divider />\n\n        <EditNow\n          name=\"nickname\"\n          className=\"w-e\"\n          initialValue={profile.name}\n          onSave={onSave}\n          label={<h5 className=\"mb-2\">Nickname</h5>}\n        />\n        <ReactAvatar />\n      </Drawer.Body>\n\n      <Drawer.Footer>\n        <Button className=\"block-edit\" style={{width: \"30%\", marginRight:\"35%\"}} onClick={onSignOut}>\n          Sign Out\n        </Button>\n      </Drawer.Footer>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useCallback } from 'react';\nimport { Alert, Button, Drawer, Icon } from 'rsuite';\nimport Profile from '.';\nimport { auth, database } from '../../configs/firebase';\nimport { useModalState, useMediaQuery } from '../../configs/functional';\nimport { Offline } from '../../context/profile.context';\nimport \"../../styles/main.scss\";\n\nconst OpenDrawer = () => {\n  const { isOpen, close, open } = useModalState(); // toggle dashboard\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const onSignOut = useCallback(() => {\n    database\n      .ref(`status/${auth.currentUser.uid}`)\n      .set(Offline)\n      .then(() => {\n        auth.signOut(); // firebase sign out\n        Alert.info('Signed out', 4000);\n        close();\n      })\n      .catch(err => {\n        Alert.error(err.message, 4000);\n      });\n  }, [close]);\n\n  return (\n    <>\n      <button className = \"block\" style={{paddingTop:'8px', paddingBottom:'9.5px'}} onClick={open}>\n        PROFILE\n      </button>\n      {/* modal toggler */}\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\n        <Profile onSignOut={onSignOut} />\n      </Drawer>\n    </>\n  );\n};\n\nexport default OpenDrawer;\n","import React from 'react';\nimport TimeAgo from 'timeago-react';\nimport USerAvatar from '../Profile/UserAvatar';\n\nconst RoomIndexData = ({ room }) => {\n  const { createdAt, name, lastMessage } = room;\n  return (\n    <div>\n      <div className=\"displayflex justify-content-between align-items-center\">\n       <h5 className=\"text-disappear\">{name}</h5>\n        <TimeAgo\n          datetime={\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\n          }\n          className=\"font-normal text-white-45\"\n        />\n      </div>\n      <div className=\"displayflex align-items-center text-white-70\">\n        {lastMessage ? (\n          <>\n            <div className=\"displayflex align-items-center\">\n              <USerAvatar\n                src={lastMessage.author.avatar}\n                name={lastMessage.author.name}\n                size=\"sm\"\n              />\n            </div>\n            <div className=\"text-disappear-2 ml-2\">\n              <div className=\"italic\">{lastMessage.author.name}</div>\n              {/* show the message or file for the last message */}\n              <span>{lastMessage.text || lastMessage.file.name}</span>\n            </div>\n          </>\n        ) : (\n          <span className=\"text-white-45\">No messages yet</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RoomIndexData;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Loader, Nav, Divider } from 'rsuite';\nimport { useRooms } from '../../context/rooms.context';\nimport RoomIndexData from './RoomIndexData';\n\nconst RoomIndex = ({ aboveElementHeight }) => {\n  const rooms = useRooms();\n  const location = useLocation();\n\n  return (\n    <Nav\n      appearance=\"subtle\"\n      vertical\n      reversed\n      className=\"overflow-y-scroll scroll\"\n      style={{\n        background: \"#172855\",\n        height: `calc(100% - ${aboveElementHeight}px)`,\n        marginLeft: \"7px\",\n        marginRight: '5px'\n      }}\n      activeKey={location.pathname}\n    >\n      {/* rooms might be null until component mounts */}\n      {!rooms && (\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\n      )}\n      {rooms &&\n        rooms.length > 0 &&\n        rooms.map(room => (\n          <Nav.Item\n            key={room.id}\n            componentClass={Link}\n            to={`/chat/${room.id}`}\n            eventKey={`/chat/${room.id}`}\n            \n          > \n            <RoomIndexData room={room} className=\"text-hover\" style={{margin: \"0px\"}}/> \n            <br />\n            <hr className=\"bg-4\"></hr>\n          </Nav.Item>\n        ))}\n    </Nav>\n  );\n};\n\nexport default RoomIndex;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Divider } from 'rsuite';\nimport CreateRoom from './RoomCreationButton';\nimport OpenDrawer from '../../components/Profile/OpenDrawer';\nimport RoomIndex from '../../components/GroupChats/RoomIndex';\n\nconst Navbar = () => {\n  const topNavbarRef = useRef();\n  const [height, setHeight] = useState(null);\n\n  useEffect(() => {\n    if (topNavbarRef.current) {\n      setHeight(topNavbarRef.current.scrollHeight);\n    }\n  }, [topNavbarRef]);\n\n  return (\n    <div className=\"heighthundred pt-2 bg-2\">\n      {/* get the height of components */}\n      <div ref={topNavbarRef} >\n        <div class=\"row\" >\n        <div class=\"column\">\n        <OpenDrawer />\n        </div>\n        <div class=\"column\">\n        <CreateRoom />\n        </div>\n        </div>\n        <Divider><div className=\"jointhefun\">Join the Fun</div></Divider>\n      </div>\n      {/* Chat room list*/}\n      <RoomIndex aboveElementHeight={height} />\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { memo, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Alert, Button, Drawer } from 'rsuite';\nimport { useCurrentRoom } from '../../../context/userroom.context';\nimport { useMediaQuery, useModalState } from '../../../configs/functional';\nimport { database } from '../../../configs/firebase';\nimport EditNow from '../../common/EditComponent';\nimport { Icon, InputGroup } from 'rsuite';\n\nconst EditRoom = () => {\n  \n  const { open, close, isOpen } = useModalState();\n  const { chatId, roomsRef } = useParams();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const name = useCurrentRoom(v => v.name);\n  const description = useCurrentRoom(v => v.description);\n\n  const updateData = (key, value) => {\n    database\n      .ref(`/rooms/${chatId}`)\n      .child(key)\n      .set(value)\n      .then(() => {\n        Alert.success('Successfully updated', 4000);\n      })\n      .catch(err => {\n        Alert.error(err.message, 4000);\n      });\n  };\n\n  const onNameSave = newName => {\n    updateData('name', newName);\n  };\n\n  const onDescriptionSave = newDescription => {\n    updateData('description', newDescription);\n  };\n\n\n  return (\n    <>\n      <button className=\"block-edit\" style={{zIndex:\"3\", marginLeft:\"10px\", padding: '12.5px 8px', fontSize: '15px'}} onClick={open}>\n        <Icon icon=\"cogs\"/> EDIT ROOM\n      </button>\n      <Drawer full={isMobile} show={isOpen} onHide={close} \n            placement=\"right\" style={{width:\"300px\"}}>\n        <Drawer.Header>\n          <Drawer.Title>Room Details</Drawer.Title>\n        </Drawer.Header>\n        <Drawer.Body>\n          <EditNow\n            initialValue={name}\n            onSave={onNameSave}\n            label={<h5 className=\"mb-2\">Name</h5>}\n            emptyMsg=\"Name can not be empty\"\n          />\n          {/* text area input */}\n          <EditNow\n            componentClass=\"textarea\"\n            row={5}\n            initialValue={description}\n            onSave={onDescriptionSave}\n            emptyMsg=\"Description can not be empty\"\n            wrapperClassName=\"mt-3\"\n          />\n        </Drawer.Body>\n        <Drawer.Footer>\n          <Button block onClick={close}></Button>\n        </Drawer.Footer>\n      </Drawer>\n    </>\n  );\n};\n\nexport default memo(EditRoom);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst AnimatedButton = styled.div `\n.btn {\n  font-size: 1em;\n  line-height: 1em;\n  letter-spacing: 0.04em;\n  display: inline-block;\n  margin-left: 6px;\n  color: white;\n\n  &--svg {\n      position: relative;\n      height: 42px;\n      width: 190px;\n      overflow: hidden;\n      border-radius: 5px;\n      \n\n\n      &:hover {\n          .btn--svg__circle {\n              circle {\n                  -webkit-transform: scale(0);\n                  -moz-transform: scale(0);\n                  -ms-transform: scale(0);\n                  transform: scale(0);\n              }\n          }\n\n          .btn--svg__label {\n\n              color:  #FFF;\n          }\n\n          .btn--svg__border--left,\n          .btn--svg__border--right {\n              path {\n                  stroke-dasharray: 61.8204345703125 61.8204345703125;\n                  stroke-dashoffset: 0;\n                  -webkit-transition-delay: 0.25s;\n                  -webkit-transition-duration: 0.5s;\n                  -webkit-transition-timing-function: ease-in-out;\n                  -webkit-transition-property: stroke-dashoffset;\n                  -moz-transition-delay: 0.25s;\n                  -moz-transition-duration: 0.5s;\n                  -moz-transition-timing-function: ease-in-out;\n                  -moz-transition-property: stroke-dashoffset;\n                  -ms-transition-delay: 0.25s;\n                  -ms-transition-duration: 0.5s;\n                  -ms-transition-timing-function: ease-in-out;\n                  -ms-transition-property: stroke-dashoffset;\n                  transition-delay: 0.25s;\n                  transition-duration: 0.5s;\n                  transition-timing-function: ease-in-out;\n                  transition-property: stroke-dashoffset;\n              }\n          }\n      }\n\n      &__label {\n          -webkit-font-smoothing: antialiased;\n          font-family: sans-serif;\n          font-weight: bold;\n          text-align:center;\n          color: white;\n          z-index: 3;\n          width: 100%;\n          -webkit-transition: color 0.5s ease-in-out;\n          -moz-transition: color 0.5s ease-in-out;\n          -ms-transition: color 0.5s ease-in-out;\n          transition: color 0.5s ease-in-out;\n      }\n\n      &__circle {\n          circle {\n              -webkit-transition: transform 0.5s ease-in-out;\n              -webkit-transform: scale(1.1);\n              -webkit-transform-origin: 50% 50%;\n              -moz-transition: transform 0.5s ease-in-out;\n              -moz-transform: scale(1.1);\n              -moz-transform-origin: 50% 50%;\n              -ms-transition: transform 0.5s ease-in-out;\n              -ms-transform: scale(1.1);\n              -ms-transform-origin: 50% 50%;\n              transition: transform 0.5s ease-in-out;\n              transform: scale(1.1);\n              transform-origin: 50% 50%;\n          }\n      }\n\n      &__border {\n\n          &--left,\n          &--right {\n              path {\n                  stroke-dasharray: 61.8204345703125 61.8204345703125;\n                  -webkit-transition-duration: 0s;\n                  -webkit-transition-timing-function: ease-in-out;\n                  -webkit-transition-property: stroke-dashoffset;\n                  -webkit-transition-delay: 0.5s;\n                  -moz-transition-duration: 0s;\n                  -moz-transition-timing-function: ease-in-out;\n                  -moz-transition-property: stroke-dashoffset;\n                  -moz-transition-delay: 0.5s;\n                  -ms-transition-duration: 0s;\n                  -ms-transition-timing-function: ease-in-out;\n                  -ms-transition-property: stroke-dashoffset;\n                  -ms-transition-delay: 0.5s;\n                  transition-duration: 0s;\n                  transition-timing-function: ease-in-out;\n                  transition-property: stroke-dashoffset;\n                  transition-delay: 0.5s;\n              }\n          }\n\n          &--left {\n              path {\n                  stroke-dashoffset: -61.8204345703125;\n              }\n          }\n\n          &--right {\n              path {\n                  stroke-dashoffset: 61.8204345703125;\n              }\n          }\n      }\n\n      svg,\n      &__label {\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          -webkit-transform: translate(-50%, -50%);\n          -webkit-transform-origin: 50% 50%;\n          -moz-transform: translate(-50%, -50%);\n          -moz-transform-origin: 50% 50%;\n          -ms-transform: translate(-50%, -50%);\n          -ms-transform-origin: 50% 50%;\n          transform: translate(-50%, -50%);\n          transform-origin: 50% 50%;\n      }\n  }\n}\n\n// Utils\n.c-white {\n  color:  #FFF\n}\n\n.trailer {\n  margin-bottom: 40px;\n  \n  &--nano {\n      margin-bottom: 10px;\n  }\n}\n\na {\n  position: relative;\n  text-decoration: none;\n  color: red;\n  \n  &:after {\n      content: '';\n      height: 1px;\n      bottom: -4px;\n      position: absolute;\n      left: 5%;\n      right: 95%;\n      background: red;\n      transition: right 0.25s ease-in-out;\n  }\n  \n  &:hover:after {\n      right: 5%;\n  }\n}\n\n.teasing-1,\n.heading-2 {\n  font-family: sans-serif;\n  letter-spacing: 0.04em;\n  -webkit-font-smoothing: antialiased;\n}\n\n.teasing-1 {\n  font-size: 14px;\n  line-height: 14px;\n}\n\n.heading-2 {\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 20px;\n  text-transform: uppercase;\n}\n`;\n\nexport default AnimatedButton;\n","import React, { memo } from 'react';\nimport { useParams } from 'react-router';\nimport { Icon, InputGroup } from 'rsuite';\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Alert } from 'rsuite';\nimport \"../../../styles/main.scss\";\nimport AnimatedButton from './AnimatedButton';\n\nconst VideoCallButton = () => {\nconst { chatId, messageId } = useParams();\nconst updates = {};\n//   create last updates message,create messages in our database, get new unique key without creating the actual document\nupdates[`/messages/${messageId}`] = `https://videochat-teams.herokuapp.com/?room=room_${chatId}`;\nupdates[`/rooms/${chatId}/lastMessage`] = (\n  `https://videochat-teams.herokuapp.com/?room=room_${chatId}`\n)\n\n\n\n  return (\n    <>\n<Tooltip\n  title=\"Start a Video Call with your room members\"\n  placement=\"bottom\"\n  >\n       <AnimatedButton style={{marginBottom: '-62px'}}  onClick={(e) => {\n       e.preventDefault();\n            window.open(`/${chatId}`, '_blank' );\n            Alert.info('Videocall has started. Let others know', 60000);\n            }} style={{marginRight: '16px', marginBottom: '-60px'}}>\n             <a class=\"btn btn--svg js-animated-button\">\n                 <span class=\"btn--svg__label\">VIDEO CALL</span>\n                 <svg class=\"btn--svg__circle\" width=\"190\" x=\"0px\" y=\"0px\" viewBox=\"0 0 60 60\" enable-background=\"new 0 0 60 60\">\n                 <circle class=\"js-discover-circle\" fill=\"#2b4a69\" opacity=\"0.7\" cx=\"30\" cy=\"30\" r=\"28.7\"></circle>\n                 </svg>\n                 <svg class=\"btn--svg__border\" x=\"0px\" y=\"0px\" preserveaspectratio=\"none\" viewBox=\"2 29.3 56.9 13.4\" enable-background=\"new 2 29.3 56.9 13.4\" width=\"190\">\n                 <g class=\"btn--svg__border--left js-discover-left-border\" id=\"Calque_2\">\n                     <path fill=\"none\" stroke=\"#464EB8\" stroke-width=\"0.5\" stroke-miterlimit=\"1\" d=\"M30.4,41.9H9c0,0-6.2-0.3-6.2-5.9S9,30.1,9,30.1h21.4\"></path>\n                 </g>\n                 <g class=\"btn--svg__border--right js-discover-right-border\" id=\"Calque_3\">\n                     <path fill=\"none\" stroke=\" #464EB8\" stroke-width=\"0.5\" stroke-miterlimit=\"1\" d=\"M30.4,41.9h21.5c0,0,6.1-0.4,6.1-5.9s-6-5.9-6-5.9H30.4\"></path>\n                 </g>\n                 </svg>\n                  </a>\n          </AnimatedButton>\n\n    </Tooltip>\n     </>\n  );\n }\n\n export default memo(VideoCallButton);\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonToolbar, Icon } from 'rsuite';\nimport { useCurrentRoom } from '../../../context/userroom.context';\nimport { useMediaQuery } from '../../../configs/functional';\nimport EditRoom from './EditRoom';\nimport VideoCallButton from './VideoCallButton';\nimport teams from '../../../assets/teams.svg';\n\nimport \"../../../styles/main.scss\";\n\nconst Nav = () => {\n  const name = useCurrentRoom(v => v.name);\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  return (\n    <div>\n      <div className=\"displayflex justify-content-end align-items-center\">\n        <h4 className=\"text-disappear-2 displayflex align-items-center\">\n          <Icon\n            componentClass={Link}\n            to=\"/\"\n            icon=\"arrow-circle-left\"\n            size=\"2x\"\n            className={\n              isMobile\n                ? 'displayinline p-0 mr-2 text-blue link-unstyled'\n                : 'display1'\n            }\n          />\n        </h4>\n        \n        <VideoCallButton />\n\n      </div>\n      <div className=\"displayflex justify-content-between align-items-center shiftup\">\n        <img alt=\"Teams\" src={teams} style={{width: '50px', height: '50px', alignItems: 'center', marginBottom: '0px'}}/>\n\n      <ButtonToolbar className=\"cover bg\" style={{marginLeft: '6px'}}>\n          {/* only show the edit button if the user is Admin */}\n          {isAdmin && <EditRoom />}\n        </ButtonToolbar>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Nav);","import React from 'react';\nimport { useParams } from 'react-router';\nimport { Loader } from 'rsuite';\nimport GroupMessages from '../../components/Chat/ChatArea';\nimport ChatNav from '../../components/Chat/Nav';\nimport ChatFooter from '../../components/Chat/Footer';\nimport { useRooms } from '../../context/rooms.context';\nimport { CurrentRoomProvider } from '../../context/userroom.context';\nimport { Array } from '../../configs/helpers';\nimport { auth } from '../../configs/firebase';\nimport { useProfile } from '../../context/profile.context';\nimport {\n  useHistory\n} from \"react-router-dom\";\n\n//Chat Component for Dashboard\n\nconst Chat = () => {\n  const { chatId } = useParams();\n  const rooms = useRooms();\n  const { profile, isLoading } = useProfile();\n  let {push} = useHistory();\n\n  if (!rooms) {\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\n  }\n\n  /*Error Cases; \n  Case 1: User is not authenticated \n  Case 2: Room ID doesn't exist\n  */\n\n  const currentRoom = rooms.find(room => room.id === chatId);\n\n  if (!profile) {\n    return <h5 className=\"mt-page\">\n      Chat is not available in Guest mode <br />Login to access all features <br />\n     <button className=\"block-nav-2\" variant=\"danger\" onClick={() => push(\"/signin\")} style={{width: \"68%\",marginTop:\"15px\",marginRight: \"30px\"}}> Authenticate </button>\n    </h5>;\n  }\n\n  \n  if (!currentRoom) {\n    return <h5 className=\"text-right mt-page\">\n     Join a room to chat\n    </h5>;\n  }\n\n  const { name, description } = currentRoom;\n\n  const admins = Array(currentRoom.admins);\n  const isAdmin = admins.includes(auth.currentUser.uid);\n\n \n  const currentRoomData = {\n    name,\n    description,\n    admins,\n    isAdmin,\n  };\n\n    // Room Data is stored and passed on to Room State\n\n  return (\n    <CurrentRoomProvider data={currentRoomData}>\n      <div className=\"chatnav\">\n        <ChatNav />\n      </div>\n  \n    <div className=\"chatarea bg\">\n        <GroupMessages />\n      </div>\n      <div className=\"chatfooter bg\">\n        <ChatFooter />\n      </div>\n    </CurrentRoomProvider>\n  );\n};\n\nexport default Chat;\n","import React, { useEffect } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router';\nimport { Col, Grid, Row } from 'rsuite';\nimport { UserRooms } from '../../context/rooms.context';\nimport { useMediaQuery } from '../../configs/functional';\nimport Navbar from '../Navbar/Navbar';\nimport Chat from './Chat';\nimport \"../../styles/main.scss\";\nimport teams from '../../assets/teams.svg';\n\n\nconst Home = () => {\n  const isDesktop = useMediaQuery('(min-width:992px)');\n  const { isExact } = useRouteMatch();\n\n  const canRenderNavbar = isDesktop || isExact;\n  return (\n    <UserRooms>\n      <Grid fluid className=\"heighthundred\">\n        <Row className=\"heighthundred\">\n          {canRenderNavbar && (\n            <Col xs={17} md={8} className=\"heighthundred\">\n              <Navbar />\n            </Col>\n          )}\n\n          <Switch>\n            <Route exact path=\"/chat/:chatId\">\n              <Col xs={24} md={16} className=\"heighthundred\">\n                <Chat />\n              </Col>\n            </Route>\n            <Route>\n            {/* if no room is selected */}\n              {isDesktop && (\n                <Col xs={24} md={16} className=\"heighthundred bg\">\n                  <img src={teams} style={{width: '50px', height: '50px', marginTop:'18px', alignItems: 'center'}}/>\n                  <div style={{marginBottom:'25px'}}>\n                  <h2>Stay.InTouch</h2>\n                  <h6 class=\"rainbow-text\">  \n                  <br />We hope you brought pizza \n                </h6> \n                </div>\n                </Col>\n              )}\n            </Route>\n          </Switch>\n        </Row>\n      </Grid>\n    </UserRooms>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './styles/main.scss';\nimport { Switch, Route } from 'react-router';\nimport PublicRoute from './routes/PublicRoute';\nimport PrivateRoute from './routes/PrivateRoute';\nimport MeetingRoom from './videocall/src/components/MeetingRoom/index';\nimport ErrorBoundary from './components/common/ErrorBoundary';\nimport SignIn from './UserLanding/Signin';\nimport { UserProfile } from './context/profile.context';\nimport Homevideo from './videocall/src/components/Home/index';\nimport Home from './UserLanding/Home';\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <UserProfile>\n        <Switch>\n        <PublicRoute exact path=\"/signin\">\n            <SignIn />\n          </PublicRoute>\n          <PrivateRoute exact path=\"/chat/:chatId\">\n            <Home />\n          </PrivateRoute>\n          <Route exact path=\"/videocall\">\n            <Homevideo />\n          </Route>\n          <Route exact path=\"/:chatId\">\n            <MeetingRoom />\n          </Route>\n          <PrivateRoute exact path=\"/\">\n            <Home />\n          </PrivateRoute>\n        </Switch>\n      </UserProfile>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/teams.80ccd59e.svg\";"],"sourceRoot":""}